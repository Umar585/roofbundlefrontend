[{"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\index.js":"1","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\reportWebVitals.js":"2","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\App.js":"3","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\Components\\Home\\HomePage.js":"4","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\Components\\RoofReport\\Billing\\StripeForm.js":"5","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\Components\\Home\\SubForm.js":"6","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\Components\\Home\\Services.js":"7","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\Components\\Home\\Foot.js":"8","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\Components\\CustomComponent\\ScrollToTop.js":"9","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\Components\\RoofReport\\RoofReport.js":"10","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\Components\\RoofReport\\Maps\\Maps.js":"11","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\Components\\RoofReport\\Maps\\GoogleMaps.js":"12"},{"size":500,"mtime":1609173203416,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1609173203416,"results":"15","hashOfConfig":"14"},{"size":727,"mtime":1610553175682,"results":"16","hashOfConfig":"14"},{"size":2258,"mtime":1610639402390,"results":"17","hashOfConfig":"14"},{"size":6197,"mtime":1610639635868,"results":"18","hashOfConfig":"14"},{"size":1959,"mtime":1610571682363,"results":"19","hashOfConfig":"14"},{"size":1341,"mtime":1610571536529,"results":"20","hashOfConfig":"14"},{"size":2506,"mtime":1610571536484,"results":"21","hashOfConfig":"14"},{"size":404,"mtime":1610571552036,"results":"22","hashOfConfig":"14"},{"size":9609,"mtime":1610571693470,"results":"23","hashOfConfig":"14"},{"size":2373,"mtime":1610571551839,"results":"24","hashOfConfig":"14"},{"size":740,"mtime":1610571551829,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1dybcmb",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\index.js",[],["53","54"],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\reportWebVitals.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\App.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\Components\\Home\\HomePage.js",["55"],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\Components\\RoofReport\\Billing\\StripeForm.js",["56","57"],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\Components\\Home\\SubForm.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\Components\\Home\\Services.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\Components\\Home\\Foot.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\Components\\CustomComponent\\ScrollToTop.js",["58"],"import React, { useEffect, Fragment } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction ScrollToTop({ history, children }) {\r\n  useEffect(() => {\r\n    const unlisten = history.listen(() => {\r\n      window.scrollTo(0, 0);\r\n    });\r\n    return () => {\r\n      unlisten();\r\n    };\r\n  }, []);\r\n\r\n  return <Fragment>{children}</Fragment>;\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\Components\\RoofReport\\RoofReport.js",["59","60","61"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n//google-maps-api\r\nimport { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\r\n//components\r\nimport Maps from \"./Maps/Maps\";\r\nimport InputMask from \"react-input-mask\";\r\nimport Footer from \"../Home/Foot\";\r\n//assets\r\nimport Logo from \"../../assets/img/Logo.png\";\r\nimport bgImg from \"../../assets/img/bgImg.jpg\";\r\n\r\n//icons\r\nimport { IconContext } from \"react-icons\";\r\nimport * as FiIcon from \"react-icons/fi\";\r\n\r\nexport default function RoofReport() {\r\n  const history = useHistory();\r\n\r\n  const [form, setForm] = useState({\r\n    company: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    country: \"\",\r\n  });\r\n  const [checkForm, setCheckForm] = useState({\r\n    address: false,\r\n    company: false,\r\n    phone: false,\r\n    email: false,\r\n    country: false,\r\n    terms: false,\r\n  });\r\n  const [checkTerms, setCheckTerms] = useState(false);\r\n  const [sub, setSub] = useState(false);\r\n  const [checkSub, setCheckSub] = useState(false);\r\n  const [msg, setMsg] = useState(\"\");\r\n\r\n  const [address, setAddress] = useState(\"\");\r\n  const [coords, setCoords] = useState({\r\n    lat: null,\r\n    lng: null,\r\n  });\r\n\r\n  const handleSelect = async (val) => {\r\n    const results = await geocodeByAddress(val);\r\n    const latLng = await getLatLng(results[0]);\r\n    if (!address) {\r\n      return;\r\n    }\r\n    setAddress(val);\r\n    setCoords(latLng);\r\n  };\r\n  const handleCompany = (e) => {\r\n    setForm({ ...form, company: e.target.value });\r\n  };\r\n  const handlePhone = (e) => {\r\n    setForm({ ...form, phone: e.target.value });\r\n  };\r\n  const handleEmail = (e) => {\r\n    setForm({ ...form, email: e.target.value });\r\n  };\r\n  const handleCountry = (e) => {\r\n    setForm({ ...form, country: e.target.value });\r\n  };\r\n  const handleTermsCheck = (e) => {\r\n    setCheckTerms(e.target.checked);\r\n  };\r\n  const handleSubCheck = (e) => {\r\n    setSub(e.target.checked);\r\n  };\r\n\r\n  const checkFormFields = () => {\r\n    let isValid = true;\r\n\r\n    if (address === \"\") {\r\n      setCheckForm({ checkForm, address: true });\r\n      isValid = false;\r\n    } else if (form.company === \"\") {\r\n      setCheckForm({\r\n        checkForm,\r\n        company: true,\r\n      });\r\n      isValid = false;\r\n    } else if (form.phone === \"\") {\r\n      setCheckForm({\r\n        checkForm,\r\n        phone: true,\r\n      });\r\n      isValid = false;\r\n    } else if (form.email === \"\") {\r\n      setCheckForm({\r\n        checkForm,\r\n        email: true,\r\n      });\r\n      isValid = false;\r\n    } else if (form.country === \"\") {\r\n      setCheckForm({ checkForm, country: true });\r\n      isValid = false;\r\n    } else if (checkTerms === false) {\r\n      setCheckForm({ checkForm, terms: true });\r\n      isValid = false;\r\n    } else {\r\n      setCheckForm({\r\n        address: false,\r\n        company: false,\r\n        phone: false,\r\n        email: false,\r\n        country: false,\r\n        terms: false,\r\n      });\r\n      isValid = true;\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const isValid = checkFormFields();\r\n    //if use wants to sub\r\n\r\n    if (isValid) {\r\n      //checking if sub is checked\r\n      if (sub === true) {\r\n        if (form.email) {\r\n          fetch(`/api/mailchimp?email=${form.email}`)\r\n            .then((res) => {\r\n              if (res.status === 400) {\r\n                setCheckSub(false);\r\n                setMsg(\"Email is already subscribed\");\r\n              } else {\r\n                pushToBilling();\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              setCheckSub(false);\r\n              setMsg(\"Something went wrong. Try again!\");\r\n            });\r\n          setTimeout(() => setMsg(\"\"), 4000);\r\n        }\r\n      } else {\r\n        pushToBilling();\r\n      }\r\n    }\r\n  };\r\n  function pushToBilling() {\r\n    //pushing details to billing\r\n    history.push(\"/billing\", {\r\n      address: address,\r\n      company: form.company,\r\n      phone: form.phone,\r\n      email: form.email,\r\n      country: form.country,\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleSelect();\r\n  }, [coords]);\r\n\r\n  return (\r\n    <div style={backStyle}>\r\n      <div className=\"container-fluid\">\r\n        <img src={Logo} alt=\"Roofbundle Logo\" style={logoStyle} />\r\n      </div>\r\n      <div className=\"container\">\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"row\" style={{ marginTop: \"100px\" }}>\r\n            <div className=\"col-md-6 mt-2\">\r\n              <Maps\r\n                checkFormaddress={checkForm.address}\r\n                lat={coords.lat}\r\n                lng={coords.lng}\r\n                address={address}\r\n                handleAddress={setAddress}\r\n                handleSelect={handleSelect}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-md-6 mt-2\">\r\n              {/*Billing Info Card */}\r\n              <h2 style={{ fontFamily: \"LatoBold\" }}>Personal Information</h2>\r\n              <div className=\"mt-3\"></div>\r\n              <div className=\"form-group\">\r\n                {checkForm.company ? (\r\n                  <label className=\"small text-danger\">\r\n                    Company Name Required\r\n                  </label>\r\n                ) : null}\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"companyName\"\r\n                  placeholder=\"Company Name\"\r\n                  onChange={handleCompany}\r\n                  value={form.company}\r\n                  autoComplete=\"off\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                {checkForm.phone ? (\r\n                  <label className=\"small text-danger\">\r\n                    Phone Number Required\r\n                  </label>\r\n                ) : null}\r\n                <InputMask\r\n                  mask=\"999-999-9999\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"phone\"\r\n                  placeholder=\"Phone Number\"\r\n                  onChange={handlePhone}\r\n                  value={form.phone}\r\n                  autoComplete=\"off\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                {checkForm.email ? (\r\n                  <label className=\"small text-danger\">Email Required</label>\r\n                ) : null}\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"email\"\r\n                  placeholder=\"Email\"\r\n                  onChange={handleEmail}\r\n                  value={form.email}\r\n                  autoComplete=\"off\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                {checkForm.country ? (\r\n                  <label className=\"small text-danger\">Country Required</label>\r\n                ) : null}\r\n                <select\r\n                  className=\"form-control\"\r\n                  id=\"country\"\r\n                  onChange={handleCountry}\r\n                  value={form.country}\r\n                >\r\n                  <option value=\"\">Country</option>\r\n                  <option value=\"Canada\">Canada</option>\r\n                  <option value=\"United States\">United States (USA)</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"form-check-input\"\r\n                  id=\"termsCheck\"\r\n                  onChange={handleTermsCheck}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"termsCheck\">\r\n                  <a href=\"#\" style={{ color: \"#414141\" }}>\r\n                    I Accept the terms of use\r\n                  </a>\r\n                </label>\r\n                {checkForm.terms ? (\r\n                  <p className=\"small text-danger\">Terms Required</p>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"form-check-input\"\r\n                  id=\"subCheck\"\r\n                  onChange={handleSubCheck}\r\n                />\r\n                <label\r\n                  className=\"form-check-label\"\r\n                  htmlFor=\"subCheck\"\r\n                  style={{ color: \"#414141\" }}\r\n                >\r\n                  Sign up for updates\r\n                </label>\r\n                {checkSub ? (\r\n                  <p className=\"small text-success\">{msg}</p>\r\n                ) : (\r\n                  <p className=\"small text-danger\">{msg}</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-12 mt-4 text-center\">\r\n              <button\r\n                className=\"btn text-white w-50 mt-4\"\r\n                style={{ backgroundColor: \"#e60029\" }}\r\n              >\r\n                Proceed{\" \"}\r\n                <IconContext.Provider value={{ size: \"16px\" }}>\r\n                  <FiIcon.FiArrowRightCircle />\r\n                </IconContext.Provider>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div style={{ marginTop: \"100px\" }}>\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst logoStyle = {\r\n  maxWidth: \"500px\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n};\r\nconst backStyle = {\r\n  backgroundImage: `url(${bgImg})`,\r\n  minHeight: \"100vh\",\r\n  height: \"100%\",\r\n  backgroundPosition: \"center\",\r\n  backgroundRepeat: \"no-repeat\",\r\n  backgroundSize: \"cover\",\r\n};\r\n","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\Components\\RoofReport\\Maps\\Maps.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\Components\\RoofReport\\Maps\\GoogleMaps.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":5,"column":10,"nodeType":"68","messageId":"69","endLine":5,"endColumn":14},{"ruleId":"66","severity":1,"message":"70","line":1,"column":27,"nodeType":"68","messageId":"69","endLine":1,"endColumn":36},{"ruleId":"66","severity":1,"message":"71","line":44,"column":19,"nodeType":"68","messageId":"69","endLine":44,"endColumn":23},{"ruleId":"72","severity":1,"message":"73","line":12,"column":6,"nodeType":"74","endLine":12,"endColumn":8,"suggestions":"75"},{"ruleId":"66","severity":1,"message":"76","line":1,"column":38,"nodeType":"68","messageId":"69","endLine":1,"endColumn":44},{"ruleId":"72","severity":1,"message":"77","line":159,"column":6,"nodeType":"74","endLine":159,"endColumn":14,"suggestions":"78"},{"ruleId":"79","severity":1,"message":"80","line":254,"column":19,"nodeType":"81","endLine":254,"endColumn":60},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["84"],"'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'handleSelect'. Either include it or remove the dependency array.",["85"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},"Update the dependencies array to be: [history]",{"range":"90","text":"91"},"Update the dependencies array to be: [coords, handleSelect]",{"range":"92","text":"93"},[307,309],"[history]",[4128,4136],"[coords, handleSelect]"]