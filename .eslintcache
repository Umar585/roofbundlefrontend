[{"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\index.js":"1","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\reportWebVitals.js":"2","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\App.js":"3","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\Components\\CustomComponent\\ScrollToTop.js":"4","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\polyfill.js":"5","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\store.js":"6","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\assets\\icons\\index.js":"7","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\assets\\icons\\logo.js":"8","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\assets\\icons\\logo-negative.js":"9","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\assets\\icons\\sygnet.js":"10","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\containers\\TheFooter.js":"11","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\containers\\TheHeader.js":"12","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\containers\\TheHeaderDropdown.js":"13","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\containers\\TheSidebar.js":"14","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\containers\\_nav.js":"15","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\dashboard\\Dashboard.js":"16","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\widgets\\Widgets.js":"17","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\users\\Users.js":"18","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\users\\User.js":"19","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\base\\tables\\Tables.js":"20","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\base\\breadcrumbs\\Breadcrumbs.js":"21","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\base\\cards\\Cards.js":"22","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\base\\carousels\\Carousels.js":"23","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\base\\jumbotrons\\Jumbotrons.js":"24","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\charts\\Charts.js":"25","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\base\\list-groups\\ListGroups.js":"26","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\base\\forms\\BasicForms.js":"27","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\base\\collapses\\Collapses.js":"28","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\base\\navbars\\Navbars.js":"29","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\base\\navs\\Navs.js":"30","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\base\\paginations\\Pagnations.js":"31","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\base\\progress-bar\\ProgressBar.js":"32","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\base\\popovers\\Popovers.js":"33","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\base\\tabs\\Tabs.js":"34","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\base\\tooltips\\Tooltips.js":"35","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\notifications\\alerts\\Alerts.js":"36","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\notifications\\toaster\\Toaster.js":"37","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\notifications\\badges\\Badges.js":"38","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\base\\switches\\Switches.js":"39","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\notifications\\modals\\Modals.js":"40","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\buttons\\brand-buttons\\BrandButtons.js":"41","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\buttons\\button-groups\\ButtonGroups.js":"42","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\buttons\\button-dropdowns\\ButtonDropdowns.js":"43","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\icons\\coreui-icons\\CoreUIIcons.js":"44","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\buttons\\buttons\\Buttons.js":"45","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\icons\\flags\\Flags.js":"46","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\icons\\brands\\Brands.js":"47","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\theme\\colors\\Colors.js":"48","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\theme\\typography\\Typography.js":"49","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\widgets\\WidgetsBrand.js":"50","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\widgets\\WidgetsDropdown.js":"51","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\charts\\MainChartExample.js":"52","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\users\\UsersData.js":"53","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\charts\\ChartBarSimple.js":"54","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\charts\\ChartLineSimple.js":"55","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\serviceWorker.js":"56","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\Components\\CustomComponent\\CardWidget.js":"57","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\Components\\CustomComponent\\MainChart.js":"58","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\Components\\CustomComponent\\ToDoCard.js":"59","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\customer.js":"60","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\Components\\CustomComponent\\Weather.js":"61","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\NewCustomer\\NewCustomer.js":"62","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\NewCustomer\\Form.js":"63","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\NewCustomer\\Maps\\Maps.js":"64","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\NewCustomer\\Maps\\GoogleMaps.js":"65","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\TableComponent\\Table.js":"66","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\CustomerFile\\CustomerFile.js":"67","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\signin\\SignIn.js":"68","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\signin\\SignInForm.js":"69","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\pages\\page404\\Page404.js":"70","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\UpdateCustomer\\UpdatedCustomer.js":"71","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\UpdateCustomer\\Form.js":"72","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\UpdateCustomer\\Maps\\Maps.js":"73","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\UpdateCustomer\\Maps\\GoogleMaps.js":"74","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\InputTables\\InputTable.js":"75","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\InputTables\\Form.js":"76","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\Components\\Input.js":"77","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\Components\\Select.js":"78","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\Components\\CheckBox.js":"79","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\InputTables\\CalculationsTable\\CalculationsTable.js":"80","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\InputTables\\CalculationsTable\\AccessoriesTable.js":"81","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\InputTables\\DataTables\\Roof.js":"82","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\InputTables\\DataTables\\Eaves.js":"83","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\Tabs\\NewCust.js":"84","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\signup\\Signup.js":"85","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\signup\\SignupForm.js":"86","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\ForgotPass\\ForgotPass.js":"87","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\ForgotPass\\ForgotPassForm.js":"88","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\PasswordReset\\ResetPass.js":"89","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\PasswordReset\\ResetPassForm.js":"90","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\routing\\PrivateRoute.js":"91","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\VerifyEmail\\VerifyEmail.js":"92","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\Photos\\SinglePhotos\\SinglePhotos.js":"93","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\Photos\\SinglePhotos\\LargeSinglePhoto.js":"94","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\Tabs\\Quoted.js":"95","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\Tabs\\InProgress.js":"96","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\Tabs\\Complete.js":"97","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\Tabs\\Signed.js":"98","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\Tabs\\Invoiced.js":"99","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\Photos\\Album.js":"100","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\Photos\\Photos.js":"101","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\Documents\\Documents.js":"102","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\Diagrams\\Diagrams.js":"103","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\Diagrams\\SingleImage\\LargeDiagramPhoto.js":"104","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\InputTables\\DataTables\\RoofFaces\\RoofFaces.js":"105","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\InputTables\\CalculationsTable\\CalculationsFaces\\CalculationsFaces.js":"106","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\InputTables\\DataTables\\Selections.js":"107","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\Tools\\Tools.js":"108","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\Tools\\CostsTable\\Materials.js":"109","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\Tools\\CostsTable\\Labour.js":"110","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\Tools\\CostsTable\\Profits.js":"111","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\InputTables\\DataTables\\ProjectPrice.js":"112","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\Documents\\Docs\\Estimates.js":"113","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\Documents\\Docs\\Components\\CustomCarousel.js":"114","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\Documents\\Docs\\Components\\CustomerCard.js":"115","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\Documents\\Docs\\Components\\QualityCard.js":"116","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\Documents\\Docs\\Components\\DescriptionCard.js":"117","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\Documents\\Docs\\Components\\DetailsCard.js":"118","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\Documents\\Docs\\Components\\InfoCard.js":"119"},{"size":764,"mtime":1613616906180,"results":"120","hashOfConfig":"121"},{"size":362,"mtime":1609173203416,"results":"122","hashOfConfig":"121"},{"size":3505,"mtime":1614609643995,"results":"123","hashOfConfig":"121"},{"size":468,"mtime":1613616153601,"results":"124","hashOfConfig":"121"},{"size":1895,"mtime":1610724686507,"results":"125","hashOfConfig":"121"},{"size":324,"mtime":1610724695961,"results":"126","hashOfConfig":"121"},{"size":4086,"mtime":1610726802439,"results":"127","hashOfConfig":"121"},{"size":6920,"mtime":1610724649393,"results":"128","hashOfConfig":"121"},{"size":6933,"mtime":1610724649391,"results":"129","hashOfConfig":"121"},{"size":978,"mtime":1610724649400,"results":"130","hashOfConfig":"121"},{"size":569,"mtime":1614700379194,"results":"131","hashOfConfig":"121"},{"size":1363,"mtime":1613617217574,"results":"132","hashOfConfig":"121"},{"size":1900,"mtime":1613618199526,"results":"133","hashOfConfig":"121"},{"size":1334,"mtime":1610994857660,"results":"134","hashOfConfig":"121"},{"size":665,"mtime":1614109123025,"results":"135","hashOfConfig":"121"},{"size":3580,"mtime":1610996948942,"results":"136","hashOfConfig":"121"},{"size":12301,"mtime":1610724663838,"results":"137","hashOfConfig":"121"},{"size":2132,"mtime":1610724663833,"results":"138","hashOfConfig":"121"},{"size":1200,"mtime":1610724663830,"results":"139","hashOfConfig":"121"},{"size":4972,"mtime":1610726248310,"results":"140","hashOfConfig":"121"},{"size":1742,"mtime":1610726074715,"results":"141","hashOfConfig":"121"},{"size":19468,"mtime":1610726130545,"results":"142","hashOfConfig":"121"},{"size":8350,"mtime":1610726145906,"results":"143","hashOfConfig":"121"},{"size":2273,"mtime":1610726177745,"results":"144","hashOfConfig":"121"},{"size":5667,"mtime":1610726516659,"results":"145","hashOfConfig":"121"},{"size":15508,"mtime":1610726183380,"results":"146","hashOfConfig":"121"},{"size":60572,"mtime":1610726163867,"results":"147","hashOfConfig":"121"},{"size":10089,"mtime":1610726151381,"results":"148","hashOfConfig":"121"},{"size":5418,"mtime":1610726199906,"results":"149","hashOfConfig":"121"},{"size":9636,"mtime":1610726207537,"results":"150","hashOfConfig":"121"},{"size":2170,"mtime":1610726218174,"results":"151","hashOfConfig":"121"},{"size":3053,"mtime":1610726230007,"results":"152","hashOfConfig":"121"},{"size":2893,"mtime":1610726223517,"results":"153","hashOfConfig":"121"},{"size":4936,"mtime":1610726253761,"results":"154","hashOfConfig":"121"},{"size":2673,"mtime":1610726294854,"results":"155","hashOfConfig":"121"},{"size":5902,"mtime":1610726417150,"results":"156","hashOfConfig":"121"},{"size":5488,"mtime":1610726437103,"results":"157","hashOfConfig":"121"},{"size":4572,"mtime":1610726423781,"results":"158","hashOfConfig":"121"},{"size":36974,"mtime":1610726243850,"results":"159","hashOfConfig":"121"},{"size":11834,"mtime":1610726430511,"results":"160","hashOfConfig":"121"},{"size":15401,"mtime":1610724663749,"results":"161","hashOfConfig":"121"},{"size":6179,"mtime":1610726326787,"results":"162","hashOfConfig":"121"},{"size":16562,"mtime":1610726329897,"results":"163","hashOfConfig":"121"},{"size":600,"mtime":1610726390887,"results":"164","hashOfConfig":"121"},{"size":41449,"mtime":1610726345064,"results":"165","hashOfConfig":"121"},{"size":584,"mtime":1610726398077,"results":"166","hashOfConfig":"121"},{"size":964,"mtime":1610726383555,"results":"167","hashOfConfig":"121"},{"size":3710,"mtime":1610726453298,"results":"168","hashOfConfig":"121"},{"size":8666,"mtime":1610726483571,"results":"169","hashOfConfig":"121"},{"size":4031,"mtime":1610724663840,"results":"170","hashOfConfig":"121"},{"size":4801,"mtime":1610724663843,"results":"171","hashOfConfig":"121"},{"size":2486,"mtime":1610724663769,"results":"172","hashOfConfig":"121"},{"size":2442,"mtime":1610724663836,"results":"173","hashOfConfig":"121"},{"size":1545,"mtime":1610724663763,"results":"174","hashOfConfig":"121"},{"size":3294,"mtime":1610724663765,"results":"175","hashOfConfig":"121"},{"size":4686,"mtime":1610725704832,"results":"176","hashOfConfig":"121"},{"size":2907,"mtime":1610744161066,"results":"177","hashOfConfig":"121"},{"size":3291,"mtime":1610742057905,"results":"178","hashOfConfig":"121"},{"size":944,"mtime":1611332326253,"results":"179","hashOfConfig":"121"},{"size":4957,"mtime":1613443328291,"results":"180","hashOfConfig":"121"},{"size":763,"mtime":1611332283721,"results":"181","hashOfConfig":"121"},{"size":892,"mtime":1613659364523,"results":"182","hashOfConfig":"121"},{"size":11683,"mtime":1613659252366,"results":"183","hashOfConfig":"121"},{"size":3298,"mtime":1613418797185,"results":"184","hashOfConfig":"121"},{"size":976,"mtime":1613417839390,"results":"185","hashOfConfig":"121"},{"size":5932,"mtime":1613659421250,"results":"186","hashOfConfig":"121"},{"size":7409,"mtime":1613675905947,"results":"187","hashOfConfig":"121"},{"size":1380,"mtime":1612297412015,"results":"188","hashOfConfig":"121"},{"size":3957,"mtime":1613412870101,"results":"189","hashOfConfig":"121"},{"size":1383,"mtime":1611331782319,"results":"190","hashOfConfig":"121"},{"size":1870,"mtime":1614379780332,"results":"191","hashOfConfig":"121"},{"size":11853,"mtime":1614379890797,"results":"192","hashOfConfig":"121"},{"size":3294,"mtime":1614379872552,"results":"193","hashOfConfig":"121"},{"size":941,"mtime":1613660907242,"results":"194","hashOfConfig":"121"},{"size":947,"mtime":1614631898073,"results":"195","hashOfConfig":"121"},{"size":6468,"mtime":1614637615834,"results":"196","hashOfConfig":"121"},{"size":553,"mtime":1613498789616,"results":"197","hashOfConfig":"121"},{"size":735,"mtime":1611331686729,"results":"198","hashOfConfig":"121"},{"size":355,"mtime":1611259025014,"results":"199","hashOfConfig":"121"},{"size":17951,"mtime":1613683711792,"results":"200","hashOfConfig":"121"},{"size":14906,"mtime":1613683720399,"results":"201","hashOfConfig":"121"},{"size":20555,"mtime":1614636568868,"results":"202","hashOfConfig":"121"},{"size":28439,"mtime":1614196043618,"results":"203","hashOfConfig":"121"},{"size":1927,"mtime":1613659488046,"results":"204","hashOfConfig":"121"},{"size":1392,"mtime":1612297426656,"results":"205","hashOfConfig":"121"},{"size":7729,"mtime":1612475951744,"results":"206","hashOfConfig":"121"},{"size":1422,"mtime":1612297382982,"results":"207","hashOfConfig":"121"},{"size":2493,"mtime":1612559507105,"results":"208","hashOfConfig":"121"},{"size":1361,"mtime":1612444655002,"results":"209","hashOfConfig":"121"},{"size":3314,"mtime":1612559625444,"results":"210","hashOfConfig":"121"},{"size":1043,"mtime":1612559405928,"results":"211","hashOfConfig":"121"},{"size":1288,"mtime":1612559671373,"results":"212","hashOfConfig":"121"},{"size":352,"mtime":1613426388926,"results":"213","hashOfConfig":"121"},{"size":2274,"mtime":1613618416962,"results":"214","hashOfConfig":"121"},{"size":1944,"mtime":1613659493366,"results":"215","hashOfConfig":"121"},{"size":2003,"mtime":1613659479542,"results":"216","hashOfConfig":"121"},{"size":1958,"mtime":1613659470560,"results":"217","hashOfConfig":"121"},{"size":1949,"mtime":1613659497902,"results":"218","hashOfConfig":"121"},{"size":1956,"mtime":1613659483920,"results":"219","hashOfConfig":"121"},{"size":6323,"mtime":1614702238236,"results":"220","hashOfConfig":"121"},{"size":6396,"mtime":1613618430497,"results":"221","hashOfConfig":"121"},{"size":7963,"mtime":1614620112319,"results":"222","hashOfConfig":"121"},{"size":8995,"mtime":1613661454367,"results":"223","hashOfConfig":"121"},{"size":2598,"mtime":1613618451091,"results":"224","hashOfConfig":"121"},{"size":6517,"mtime":1614632523756,"results":"225","hashOfConfig":"121"},{"size":7292,"mtime":1613683732701,"results":"226","hashOfConfig":"121"},{"size":44282,"mtime":1614708013325,"results":"227","hashOfConfig":"121"},{"size":1907,"mtime":1614109774466,"results":"228","hashOfConfig":"121"},{"size":12967,"mtime":1614640269865,"results":"229","hashOfConfig":"121"},{"size":10310,"mtime":1614120010937,"results":"230","hashOfConfig":"121"},{"size":17093,"mtime":1614698357865,"results":"231","hashOfConfig":"121"},{"size":6789,"mtime":1614632802781,"results":"232","hashOfConfig":"121"},{"size":2383,"mtime":1614626569315,"results":"233","hashOfConfig":"121"},{"size":1506,"mtime":1614619412769,"results":"234","hashOfConfig":"121"},{"size":1299,"mtime":1614620091182,"results":"235","hashOfConfig":"121"},{"size":3705,"mtime":1614619370899,"results":"236","hashOfConfig":"121"},{"size":1454,"mtime":1614626703196,"results":"237","hashOfConfig":"121"},{"size":1684,"mtime":1614626696272,"results":"238","hashOfConfig":"121"},{"size":1150,"mtime":1614626311155,"results":"239","hashOfConfig":"121"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},"1dybcmb",{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"275"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"350"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"275"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"275"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"242"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"242"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"408"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"414"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"414"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"242"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"242"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"414"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"242"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"242"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"242"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"242"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494","usedDeprecatedRules":"242"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"497","usedDeprecatedRules":"242"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"500","usedDeprecatedRules":"242"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\index.js",[],["503","504"],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\reportWebVitals.js",[],["505","506"],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\App.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\Components\\CustomComponent\\ScrollToTop.js",["507"],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\polyfill.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\store.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\assets\\icons\\index.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\assets\\icons\\logo.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\assets\\icons\\logo-negative.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\assets\\icons\\sygnet.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\containers\\TheFooter.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\containers\\TheHeader.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\containers\\TheHeaderDropdown.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\containers\\TheSidebar.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\containers\\_nav.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\dashboard\\Dashboard.js",["508","509","510"],"import React, { lazy, useEffect, useState } from \"react\";\nimport {\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CDropdown,\n  CDropdownToggle,\n  CDropdownMenu,\n  CDropdownItem,\n  CCol,\n  CRow,\n} from \"@coreui/react\";\nimport Axios from \"axios\";\nimport MainChart from \"../../Components/CustomComponent/MainChart\";\nimport ToDoCard from \"../../Components/CustomComponent/ToDoCard\";\nimport WeatherCard from \"../../Components/CustomComponent/Weather\";\n//style\nimport \"./dash.scss\";\n\nconst CardWidget = lazy(() =>\n  import(\"../../Components/CustomComponent/CardWidget\")\n);\n\nconst Dashboard = () => {\n  const [weather, setWeather] = useState([]);\n  const [location, setLocation] = useState({\n    lat: \"\",\n    long: \"\",\n    city: \"\",\n  });\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  function fetchLocation() {\n    Axios.get(\"https://geolocation-db.com/json/\")\n      .then((res) => {\n        setLocation({\n          ...location,\n          lat: res.data.latitude,\n          long: res.data.longitude,\n          city: res.data.city,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  useEffect(() => {\n    fetchLocation();\n    setTimeout(() => setIsLoading(false), 2000);\n  }, []);\n\n  return (\n    <>\n      <CardWidget />\n      <CCard>\n        <CCardBody>\n          <CRow>\n            <CCol sm=\"5\">\n              <h4 id=\"projects\" className=\"card-title mb-0\">\n                Total Projects\n              </h4>\n            </CCol>\n            <CCol sm=\"7\" className=\"d-none d-md-block\">\n              <CButtonGroup className=\"float-right mr-3\">\n                <CDropdown>\n                  <CDropdownToggle caret color=\"white\">\n                    Last 12 Months\n                  </CDropdownToggle>\n                  <CDropdownMenu>\n                    <CDropdownItem>Last 6 Months</CDropdownItem>\n                    <CDropdownItem>Last 3 Months</CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n              </CButtonGroup>\n            </CCol>\n          </CRow>\n          <MainChart style={{ height: \"300px\", marginTop: \"40px\" }} />\n        </CCardBody>\n      </CCard>\n\n      <CRow>\n        <CCol xs=\"12\" sm=\"6\" lg=\"4\">\n          <div className=\"toDoList\">\n            <ToDoCard />\n            <ToDoCard />\n            <ToDoCard />\n            <ToDoCard />\n          </div>\n        </CCol>\n        <CCol xs=\"12\" sm=\"6\" lg=\"4\">\n          <CCard className=\"shadow\">\n            <iframe\n              title=\"Test Map\"\n              className=\"col-xs-12\"\n              src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d164632.82123650867!2d-97.29230683761371!3d49.85395901788712!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x52ea73fbf91a2b11%3A0x2b2a1afac6b9ca64!2sWinnipeg%2C%20MB!5e0!3m2!1sen!2sca!4v1610745339258!5m2!1sen!2sca\"\n              frameBorder=\"0\"\n              style={{ border: \"0px\", height: \"400px\", width: \"100%\" }}\n              allowFullScreen=\"\"\n              aria-hidden=\"false\"\n              tabIndex=\"0\"\n            ></iframe>\n          </CCard>\n          {isLoading ? (\n            <h3 className=\"text-center\">Loading ...</h3>\n          ) : (\n            <WeatherCard\n              lat={location.lat}\n              lon={location.long}\n              city={location.city}\n            />\n          )}\n        </CCol>\n        <CCol xs=\"12\" sm=\"12\" lg=\"4\">\n          <div className=\"toDoList\">\n            <ToDoCard />\n            <ToDoCard />\n            <ToDoCard />\n            <ToDoCard />\n          </div>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default Dashboard;\n",["511","512"],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\widgets\\Widgets.js",[],["513","514"],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\users\\Users.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\users\\User.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\base\\tables\\Tables.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\base\\breadcrumbs\\Breadcrumbs.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\base\\cards\\Cards.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\base\\carousels\\Carousels.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\base\\jumbotrons\\Jumbotrons.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\charts\\Charts.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\base\\list-groups\\ListGroups.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\base\\forms\\BasicForms.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\base\\collapses\\Collapses.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\base\\navbars\\Navbars.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\base\\navs\\Navs.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\base\\paginations\\Pagnations.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\base\\progress-bar\\ProgressBar.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\base\\popovers\\Popovers.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\base\\tabs\\Tabs.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\base\\tooltips\\Tooltips.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\notifications\\alerts\\Alerts.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\notifications\\toaster\\Toaster.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\notifications\\badges\\Badges.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\base\\switches\\Switches.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\notifications\\modals\\Modals.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\buttons\\brand-buttons\\BrandButtons.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\buttons\\button-groups\\ButtonGroups.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\buttons\\button-dropdowns\\ButtonDropdowns.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\icons\\coreui-icons\\CoreUIIcons.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\buttons\\buttons\\Buttons.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\icons\\flags\\Flags.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\icons\\brands\\Brands.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\theme\\colors\\Colors.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\theme\\typography\\Typography.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\widgets\\WidgetsBrand.js",[],["515","516"],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\widgets\\WidgetsDropdown.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\charts\\MainChartExample.js",[],["517","518"],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\users\\UsersData.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\charts\\ChartBarSimple.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\charts\\ChartLineSimple.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\serviceWorker.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\Components\\CustomComponent\\CardWidget.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\Components\\CustomComponent\\MainChart.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\Components\\CustomComponent\\ToDoCard.js",["519","520"],"import React from \"react\";\r\nimport { CCard, CCardHeader, CCardBody, Cul } from \"@coreui/react\";\r\n\r\nexport default function ToDoCard() {\r\n  return (\r\n    <div>\r\n      <CCard style={{ marginBottom: \"0px\" }} className=\"m-1\">\r\n        <CCardBody>\r\n          <div className=\"text-uppercase\">june 10 2021</div>\r\n          <div>\r\n            <ul>\r\n              <li className=\"mt-2\">\r\n                <span className=\"small text-muted\">\r\n                  Roof Quote: John Doe / 204 - 770 -2456\r\n                </span>\r\n                <br />\r\n                1440 Inkster Blvd - 7:30 AM\r\n              </li>\r\n              <li className=\"mt-2\">\r\n                <span className=\"small text-muted\">\r\n                  Roof Quote: Nem Smith / 204 - 986 -1265\r\n                </span>\r\n                <br />\r\n                68 DownLane St - 11:00 AM\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </CCardBody>\r\n      </CCard>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\customer.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\Components\\CustomComponent\\Weather.js",["521","522","523","524","525"],"import React, { useEffect } from \"react\";\r\nimport { CCard, CCardHeader, CCardBody, Cul } from \"@coreui/react\";\r\nimport ReactWeather, { useWeatherBit } from \"react-open-weather\";\r\n\r\n//scss\r\n//import \"./style.scss\";\r\n\r\nexport default function Weather(props) {\r\n  const { data, isLoading, errorMessage } = useWeatherBit({\r\n    key: \"3915890757a74e6d9df7b4f1a452ea54\",\r\n    lat: props.lat,\r\n    lon: props.lon,\r\n    lang: \"en\",\r\n    unit: \"M\", // values are (M,S,I)\r\n  });\r\n  return (\r\n    <div className=\"mt-2\" style={{ maxHeight: \"400px\", padding: \"10px\" }}>\r\n      <ReactWeather\r\n        isLoading={isLoading}\r\n        errorMessage={errorMessage}\r\n        data={data}\r\n        lang=\"en\"\r\n        locationLabel={props.city}\r\n        unitsLabels={{ temperature: \"C\", windSpeed: \"Km/h\" }}\r\n        showForecast={false}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\NewCustomer\\NewCustomer.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\NewCustomer\\Form.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\NewCustomer\\Maps\\Maps.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\NewCustomer\\Maps\\GoogleMaps.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\TableComponent\\Table.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\CustomerFile\\CustomerFile.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\signin\\SignIn.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\signin\\SignInForm.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\pages\\page404\\Page404.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\UpdateCustomer\\UpdatedCustomer.js",["526"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { CCard, CCardBody } from \"@coreui/react\";\r\nimport Axios from \"axios\";\r\nimport Form from \"./Form\";\r\nimport * as AiIcon from \"react-icons/ai\";\r\n\r\nexport default function UpdatedCustomer() {\r\n  const [load, setLoad] = useState(false);\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const [customer, setCustomer] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setLoad(true);\r\n    setTimeout(() => {\r\n      setLoad(false);\r\n    }, 1000);\r\n\r\n    let email = localStorage.getItem(\"email\");\r\n    let passToken = localStorage.getItem(\"passToken\");\r\n\r\n    Axios.post(\"/api/customer/getsingleuser\", { id, email, passToken })\r\n      .then((res) => {\r\n        setCustomer(res.data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        history.push(\"/\");\r\n      });\r\n  }, [id, history]);\r\n\r\n  return (\r\n    <div>\r\n      {/*} <CCard className=\"shadow\">\r\n        <CCardBody>*/}\r\n      {/*<div className=\"mb-2 float-left\">\r\n        <AiIcon.AiOutlineArrowLeft\r\n          className=\"h3\"\r\n          onClick={() => history.goBack()}\r\n        />\r\n      </div>\r\n      <div style={{ maxWidth: \"1000px\" }} className=\"text-right\">\r\n        <h5>Update Customer</h5>\r\n      </div>*/}\r\n\r\n      <div className=\"float-left\">\r\n        <AiIcon.AiOutlineArrowLeft\r\n          className=\"h3\"\r\n          onClick={() => history.goBack()}\r\n        />\r\n      </div>\r\n      <div className=\"text-right\">\r\n        <h5 style={{ marginTop: \"3px\" }}>Update Customer</h5>\r\n      </div>\r\n\r\n      <CCard className=\"border-0 mt-3\">\r\n        {load ? (\r\n          <h6 className=\"text-center mt-4\">Loading</h6>\r\n        ) : (\r\n          <Form customer={customer} />\r\n        )}\r\n      </CCard>\r\n      {/*</CCardBody>\r\n      </CCard>*/}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\UpdateCustomer\\Form.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\UpdateCustomer\\Maps\\Maps.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\UpdateCustomer\\Maps\\GoogleMaps.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\InputTables\\InputTable.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\InputTables\\Form.js",["527"],"import React, { useState, useEffect } from \"react\";\r\nimport { CCard, CCardBody, CCollapse } from \"@coreui/react\";\r\nimport Axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\n//Components\r\nimport RoofInputTable from \"./DataTables/Roof\";\r\nimport EavesInputTable from \"./DataTables/Eaves\";\r\n//import CalculationsTable from \"./CalculationsTable/CalculationsTable\";\r\n//import AccessoriesTable from \"./CalculationsTable/AccessoriesTable\";\r\n//style sheet\r\nimport \"./style.scss\";\r\n\r\nexport default function Form() {\r\n  const [form, setForm] = useState([]);\r\n  const [load, setLoad] = useState(false);\r\n  const [items, setItems] = useState([]);\r\n  const [eaveItems, setEaveItems] = useState([]);\r\n  const [formLoading, setFormLoading] = useState(false);\r\n  const [accordion, setAccordion] = useState(0);\r\n  const [removeMsg, setRemoveMsg] = useState(false);\r\n  const [msg, setMsg] = useState([]);\r\n  const { id } = useParams();\r\n\r\n  const removeRoofFace = (i) => {\r\n    items.splice(i, 1);\r\n    setItems(items);\r\n    setLoad(true);\r\n    setTimeout(() => {\r\n      setLoad(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const removeEave = (i) => {\r\n    eaveItems.splice(i, 1);\r\n    setEaveItems(eaveItems);\r\n    setRemoveMsg(true);\r\n    setTimeout(() => {\r\n      setRemoveMsg(false);\r\n    }, 4000);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      form.tableArray.length === 0 ||\r\n      (form.tableArray.length === 0 && form.eaveArray.length === 0)\r\n    ) {\r\n      setMsg({ ...msg, err: true });\r\n\r\n      setTimeout(() => {\r\n        setMsg({ ...msg, err: false });\r\n      }, 4000);\r\n    } else {\r\n      setFormLoading(true);\r\n      setTimeout(() => {\r\n        setFormLoading(false);\r\n        /* if (\r\n        form.tableArray.length === 0 ||\r\n        (form.tableArray.length === 0 && form.eaveArray.length === 0)\r\n      ) {\r\n        setMsg({ ...msg, err: true });\r\n\r\n        setTimeout(() => {\r\n          setMsg({ ...msg, err: false });\r\n        }, 4000);\r\n      } else {*/\r\n        let email = localStorage.getItem(\"email\");\r\n        let passToken = localStorage.getItem(\"passToken\");\r\n        Axios.post(\"/api/measure/addroofmeasure\", {\r\n          id,\r\n          email,\r\n          passToken,\r\n          items,\r\n          eaveItems,\r\n        })\r\n          .then((res) => {\r\n            setItems([]);\r\n            setEaveItems([]);\r\n            setMsg({ ...msg, success: true });\r\n            setTimeout(() => {\r\n              setMsg({ ...msg, success: false });\r\n            }, 4000);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err.response.data.success);\r\n          });\r\n        //}\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setForm({ ...form, tableArray: items, eaveArray: eaveItems });\r\n  }, [items, eaveItems]);\r\n\r\n  return (\r\n    <div>\r\n      {formLoading ? (\r\n        <p>Submiting</p>\r\n      ) : (\r\n        <>\r\n          <form onSubmit={handleSubmit}>\r\n            {/*Roof Data Table */}\r\n            <h6\r\n              className=\"customersTable_sliderBtn border w-100 text-center p-1\"\r\n              onClick={() => setAccordion(accordion === 1 ? null : 1)}\r\n            >\r\n              Roof Measurements\r\n            </h6>\r\n            <CCollapse show={accordion === 1}>\r\n              <CCard className=\"p-2\">\r\n                <RoofInputTable\r\n                  /*form={form}\r\n                  setForm={setForm}*/\r\n                  items={items}\r\n                  load={load}\r\n                  removeRoofFace={removeRoofFace}\r\n                />\r\n              </CCard>\r\n            </CCollapse>\r\n            {/*Eaves Input Table Data Table */}\r\n            <h6\r\n              className=\"customersTable_sliderBtn border w-100 text-center p-1\"\r\n              onClick={() => setAccordion(accordion === 5 ? null : 5)}\r\n            >\r\n              Eavestrough Measurements\r\n            </h6>\r\n            <CCollapse show={accordion === 5}>\r\n              <CCard>\r\n                <CCardBody>\r\n                  <EavesInputTable\r\n                    form={form}\r\n                    setForm={setForm}\r\n                    items={items}\r\n                    eaveItems={eaveItems}\r\n                    removeEave={removeEave}\r\n                    removeMsg={removeMsg}\r\n                  />\r\n                </CCardBody>\r\n              </CCard>\r\n            </CCollapse>\r\n            {/*Calculations Table \r\n            <h6\r\n              className=\"customersTable_sliderBtn border w-100 text-center p-1\"\r\n              onClick={() => setAccordion(accordion === 8 ? null : 8)}\r\n            >\r\n              Calculations Table\r\n            </h6>\r\n            <CCollapse show={accordion === 8}>\r\n              <CCard>\r\n                <CCardBody>\r\n                  <CalculationsTable\r\n                    pricesData={pricesData}\r\n                    pitchFactor={form.pitch}\r\n                    items={items}\r\n                  />\r\n                </CCardBody>\r\n              </CCard>\r\n            </CCollapse>\r\n\r\n            {/*Accessories Table \r\n            <h6\r\n              className=\"customersTable_sliderBtn border w-100 text-center p-1\"\r\n              onClick={() => setAccordion(accordion === 9 ? null : 9)}\r\n            >\r\n              Accessories Table\r\n            </h6>\r\n            <CCollapse show={accordion === 9}>\r\n              <CCard>\r\n                <CCardBody>\r\n                  <AccessoriesTable\r\n                    form={form}\r\n                    items={items}\r\n                    pricesData={pricesData}\r\n                  />\r\n                </CCardBody>\r\n              </CCard>\r\n            </CCollapse>*/}\r\n            {msg.err ? (\r\n              <div>\r\n                <p className=\"text-danger text-center\">\r\n                  Please fill in the form!\r\n                </p>\r\n              </div>\r\n            ) : null}\r\n            {msg.success ? (\r\n              <div>\r\n                <p className=\"text-success text-center\">Form Submitted</p>\r\n              </div>\r\n            ) : null}\r\n            <div className=\"mt-1\">\r\n              <input\r\n                type=\"submit\"\r\n                style={btnStyle}\r\n                className=\"btn w-100 rounded-0\"\r\n                value=\"DONE\"\r\n              />\r\n            </div>\r\n            {/*</CCard>*/}\r\n          </form>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst btnStyle = {\r\n  outline: \"none\",\r\n  boxShadow: \"none\",\r\n  border: \"none\",\r\n  backgroundColor: \"#e60029\",\r\n  color: \"#fff\",\r\n};\r\n","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\Components\\Input.js",[],["528","529"],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\Components\\Select.js",[],["530","531"],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\Components\\CheckBox.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\InputTables\\CalculationsTable\\CalculationsTable.js",["532","533","534"],"import React, { useState, useEffect } from \"react\";\r\nimport CalculationsFaces from \"./CalculationsFaces/CalculationsFaces\";\r\nimport { CCollapse } from \"@coreui/react\";\r\n//style sheet\r\nimport \"../style.scss\";\r\n\r\nexport default function CalculationsTable(props) {\r\n  const items = props.items;\r\n  const pricesData = props.pricesData;\r\n  const [accordion, setAccordion] = useState(0);\r\n\r\n  const getPitchValue = (val) => {\r\n    let p = 0;\r\n    if (val === \"1\") {\r\n      p = 1.003;\r\n    } else if (val === \"2\") {\r\n      p = 1.014;\r\n    } else if (val === \"3\") {\r\n      p = 1.031;\r\n    } else if (val === \"4\") {\r\n      p = 1.054;\r\n    } else if (val === \"5\") {\r\n      p = 1.083;\r\n    } else if (val === \"6\") {\r\n      p = 1.118;\r\n    } else if (val === \"7\") {\r\n      p = 1.158;\r\n    } else if (val === \"8\") {\r\n      p = 1.202;\r\n    } else if (val === \"9\") {\r\n      p = 1.25;\r\n    } else if (val === \"10\") {\r\n      p = 1.3;\r\n    } else if (val === \"11\") {\r\n      p = 1.357;\r\n    } else if (val === \"12\") {\r\n      p = 1.414;\r\n    } else if (val === \"13\") {\r\n      p = 1.474;\r\n    } else if (val === \"14\") {\r\n      p = 1.537;\r\n    } else if (val === \"15\") {\r\n      p = 1.601;\r\n    } else if (val === \"16\") {\r\n      p = 1.667;\r\n    } else if (val === \"17\") {\r\n      p = 1.734;\r\n    } else if (val === \"18\") {\r\n      p = 1.803;\r\n    }\r\n    return p;\r\n  };\r\n\r\n  const getBasicInstallValue = (val) => {\r\n    let p = 0;\r\n    if (val === \"1\") {\r\n      p = 16;\r\n    } else if (val === \"2\") {\r\n      p = 15;\r\n    } else if (val === \"3\") {\r\n      p = 15;\r\n    } else if (val === \"4\") {\r\n      p = 14;\r\n    } else if (val === \"5\") {\r\n      p = 14;\r\n    } else if (val === \"6\") {\r\n      p = 16;\r\n    } else if (val === \"7\") {\r\n      p = 21;\r\n    } else if (val === \"8\") {\r\n      p = 25;\r\n    } else if (val === \"9\") {\r\n      p = 30;\r\n    } else if (val === \"10\") {\r\n      p = 32;\r\n    } else if (val === \"11\") {\r\n      p = 35;\r\n    } else if (val === \"12\") {\r\n      p = 36;\r\n    } else if (val === \"13\") {\r\n      p = 42;\r\n    } else if (val === \"14\") {\r\n      p = 48;\r\n    } else if (val === \"15\") {\r\n      p = 49;\r\n    } else if (val === \"16\") {\r\n      p = 50;\r\n    } else if (val === \"17\") {\r\n      p = 51;\r\n    } else if (val === \"18\") {\r\n      p = 52;\r\n    }\r\n    return p;\r\n  };\r\n\r\n  const [starterBundle, setStarterBundle] = useState([]);\r\n  const [bundles, setBundles] = useState([]);\r\n  const [gable, setGable] = useState([]);\r\n  const [labour, setLabour] = useState([]);\r\n  const [capBundles, setCapBundles] = useState([]);\r\n  const [capLabour, setCapLabour] = useState([]);\r\n  const [wCLabour, setWCLabour] = useState([]);\r\n  const [shingleLabour, setShingleLabour] = useState([]);\r\n  const [roofTopDel, setRoofTopDel] = useState([]);\r\n  const [roofTopLab, setRoofTopLab] = useState([]);\r\n\r\n  function starterBundleFunc() {\r\n    var t = [];\r\n    var p = [];\r\n    items.map(function (singleElement) {\r\n      t.push(parseFloat(singleElement.eave));\r\n      p.push(getPitchValue(singleElement.pitch) * singleElement.gableGrnd);\r\n      return p;\r\n    });\r\n    var x = t.reduce((a, b) => a + b, 0);\r\n    var y = p.reduce((a, b) => a + b, 0);\r\n    return setStarterBundle(((x + y) / 110).toFixed(2));\r\n  }\r\n\r\n  function bundleFunc() {\r\n    var t = [];\r\n    items.map((singleElement) => {\r\n      var x =\r\n        ((getPitchValue(singleElement.pitch) *\r\n          singleElement.lengthGrnd *\r\n          singleElement.width *\r\n          1.06) /\r\n          100) *\r\n          3 +\r\n        singleElement.valleyRM * 0.06;\r\n      t.push(x);\r\n      return t;\r\n    });\r\n    return setBundles(t.reduce((a, b) => a + b, 0).toFixed(2));\r\n  }\r\n\r\n  function gableFunc() {\r\n    var t = [];\r\n    items.map((singleElement) => {\r\n      var x = getPitchValue(singleElement.pitch) * singleElement.gableGrnd;\r\n      t.push(x);\r\n      return t;\r\n    });\r\n    return setGable(t.reduce((a, b) => a + b, 0).toFixed(2));\r\n  }\r\n\r\n  function labourFunc() {\r\n    var t = [];\r\n    items.map((singleElement) => {\r\n      var x =\r\n        (getBasicInstallValue(singleElement.pitch) *\r\n          (parseFloat(singleElement.eave) +\r\n            parseFloat(singleElement.gableGrnd))) /\r\n        60;\r\n      t.push(x);\r\n      return t;\r\n    });\r\n    return setLabour(t.reduce((a, b) => a + b, 0).toFixed(2));\r\n  }\r\n\r\n  function cappingBundleFunc() {\r\n    var t = [];\r\n    items.map((singleElement) => {\r\n      t.push(parseFloat(singleElement.hipRM + singleElement.ridge / 23));\r\n      return t;\r\n    });\r\n    return setCapBundles(t.reduce((a, b) => a + b, 0).toFixed(2));\r\n  }\r\n\r\n  function cappingLabourFunc() {\r\n    var t = [];\r\n    items.map((singleElement) => {\r\n      t.push(\r\n        parseFloat(\r\n          (getBasicInstallValue(singleElement.pitch) *\r\n            (singleElement.hipRM + singleElement.ridge)) /\r\n            25\r\n        )\r\n      );\r\n      return t;\r\n    });\r\n    return setCapLabour(t.reduce((a, b) => a + b, 0).toFixed(2));\r\n  }\r\n\r\n  function wallChimneyFunc() {\r\n    var t = [];\r\n    items.map((singleElement) => {\r\n      t.push(parseFloat(singleElement.wall + singleElement.chimney) * 1.5);\r\n      return t;\r\n    });\r\n    return setWCLabour(t.reduce((a, b) => a + b, 0));\r\n  }\r\n\r\n  function shingleLabourFunc() {\r\n    var t = [];\r\n    var x = [];\r\n    var y;\r\n    items.map((singleElement) => {\r\n      if (singleElement.newConst === \"true\") {\r\n        t.push(\r\n          (getBasicInstallValue(singleElement.pitch) - 6) *\r\n            (((getPitchValue(singleElement.pitch) *\r\n              parseFloat(singleElement.lengthGrnd) *\r\n              parseFloat(singleElement.width) *\r\n              1.06) /\r\n              100) *\r\n              3 +\r\n              parseFloat(singleElement.valleyRM) * 0.06)\r\n        );\r\n      } else if (singleElement.newConst === \"false\") {\r\n        x.push(\r\n          getBasicInstallValue(singleElement.pitch) *\r\n            (((getPitchValue(singleElement.pitch) *\r\n              parseFloat(singleElement.lengthGrnd) *\r\n              parseFloat(singleElement.width) *\r\n              1.06) /\r\n              100) *\r\n              3 +\r\n              parseFloat(singleElement.valleyRM) * 0.06)\r\n        );\r\n      }\r\n\r\n      y = (t.reduce((a, b) => a + b, 0) + x.reduce((a, b) => a + b, 0)).toFixed(\r\n        2\r\n      );\r\n    });\r\n    return setShingleLabour(y);\r\n  }\r\n\r\n  function roofTopDeliveryFunc() {\r\n    var t = [];\r\n    items.map((singleElement) => {\r\n      if (pricesData.roofTopCost !== \"\") {\r\n        if (singleElement.roofTop === \"true\") {\r\n          t.push(\r\n            ((pricesData.roofTopCost *\r\n              (getPitchValue(singleElement.pitch) *\r\n                singleElement.lengthGrnd *\r\n                singleElement.width *\r\n                1.06)) /\r\n              100) *\r\n              3 +\r\n              singleElement.valleyRM * 0.06\r\n          );\r\n          return t;\r\n        }\r\n      }\r\n    });\r\n    return setRoofTopDel(t.reduce((a, b) => a + b, 0).toFixed(2));\r\n  }\r\n\r\n  const roofTopLabourFunc = () => {\r\n    let t = [];\r\n    let x = [];\r\n    let y;\r\n    items.map((singleElement) => {\r\n      if (singleElement.stories === \"1\" && singleElement.roofTop === \"false\") {\r\n        t.push(\r\n          (((getPitchValue(singleElement.pitch) *\r\n            singleElement.lengthGrnd *\r\n            singleElement.width *\r\n            1.06) /\r\n            100) *\r\n            3 +\r\n            singleElement.valleyRM * 0.06) *\r\n            1.5\r\n        );\r\n      } else if (\r\n        singleElement.stories === \"2\" &&\r\n        singleElement.roofTop === \"false\"\r\n      ) {\r\n        x.push(\r\n          (((getPitchValue(singleElement.pitch) *\r\n            singleElement.lengthGrnd *\r\n            singleElement.width *\r\n            1.06) /\r\n            100) *\r\n            3 +\r\n            singleElement.valleyRM * 0.06) *\r\n            2.5\r\n        );\r\n      }\r\n\r\n      y = t.reduce((a, b) => a + b, 0) + x.reduce((a, b) => a + b, 0);\r\n    });\r\n\r\n    return setRoofTopLab(y);\r\n  };\r\n\r\n  useEffect(() => {\r\n    starterBundleFunc();\r\n    bundleFunc();\r\n    gableFunc();\r\n    labourFunc();\r\n    cappingBundleFunc();\r\n    cappingLabourFunc();\r\n    wallChimneyFunc();\r\n    shingleLabourFunc();\r\n    roofTopDeliveryFunc();\r\n    roofTopLabourFunc();\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {items !== 0 ? (\r\n        <div>\r\n          {items.map((item, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <h5\r\n                  className=\"customersTable_sliderBtn border w-100 text-center p-1\"\r\n                  onClick={() =>\r\n                    setAccordion(accordion === index ? null : index)\r\n                  }\r\n                >\r\n                  Roof Face {index + 1}\r\n                </h5>\r\n                <CCollapse show={accordion === index}>\r\n                  <div className=\"border p-3\">\r\n                    <CalculationsFaces\r\n                      item={item}\r\n                      items={items}\r\n                      pricesData={pricesData}\r\n                      getPitchValue={getPitchValue}\r\n                      getBasicInstallValue={getBasicInstallValue}\r\n                      keys={index}\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </CCollapse>\r\n              </div>\r\n            );\r\n          })}\r\n          <div className=\"row\">\r\n            <div className=\"col-12 mt-3\">\r\n              <h6>Total</h6>\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <CustomInput\r\n                type=\"number\"\r\n                id=\"bundleTotal\"\r\n                label=\"Bundles\"\r\n                rightSideLabel=\"Bundles\"\r\n                disabled={true}\r\n                value={bundles}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <CustomInput\r\n                type=\"number\"\r\n                id=\"gableActualTotal\"\r\n                label=\"Gable Actual\"\r\n                rightSideLabel=\"Ln.ft\"\r\n                disabled={true}\r\n                value={gable}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <CustomInput\r\n                type=\"number\"\r\n                id=\"starterBundlesTotal\"\r\n                label=\"Starter Bundles\"\r\n                rightSideLabel=\"Bundles\"\r\n                disabled={true}\r\n                value={starterBundle}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <CustomInput\r\n                type=\"number\"\r\n                id=\"starterLabourTotal\"\r\n                label=\"Starter Labour\"\r\n                sideLabel=\"$\"\r\n                disabled={true}\r\n                value={labour}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <CustomInput\r\n                type=\"number\"\r\n                id=\"cappingBundlesTotal\"\r\n                label=\"Capping Bundles\"\r\n                rightSideLabel=\"Bundles\"\r\n                disabled={true}\r\n                value={capBundles}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <CustomInput\r\n                type=\"number\"\r\n                id=\"cappingLabourTotal\"\r\n                label=\"Capping Labour\"\r\n                sideLabel=\"$\"\r\n                disabled={true}\r\n                value={capLabour}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <CustomInput\r\n                type=\"number\"\r\n                id=\"wallChimmneyLabourTotal\"\r\n                label=\"Wall/Chimmney Labour\"\r\n                sideLabel=\"$\"\r\n                disabled={true}\r\n                value={wCLabour}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <CustomInput\r\n                type=\"number\"\r\n                id=\"shingleLabourCostTotal\"\r\n                label=\"Shingle Labour Cost\"\r\n                sideLabel=\"$\"\r\n                disabled={true}\r\n                value={shingleLabour}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <CustomInput\r\n                type=\"number\"\r\n                id=\"shingleMaterialCostTotal\"\r\n                label=\"Shingle Material Cost\"\r\n                sideLabel=\"$\"\r\n                disabled={true}\r\n                value={\r\n                  pricesData.bundle !== \"\" &&\r\n                  pricesData.starterBundle !== \"\" &&\r\n                  pricesData.cappingBundle !== \"\" &&\r\n                  pricesData.roofTopCost !== \"\" ? (\r\n                    `$${(\r\n                      Math.ceil(bundles) * pricesData.bundle +\r\n                      Math.ceil(starterBundle) * pricesData.starterBundle +\r\n                      Math.ceil(capBundles) * pricesData.cappingBundle +\r\n                      60 +\r\n                      parseFloat(pricesData.roofTopCost)\r\n                    ).toFixed(2)}`\r\n                  ) : (\r\n                    <span className=\"text-danger\">\"Set Bundle Prices\"</span>\r\n                  )\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <CustomInput\r\n                type=\"number\"\r\n                id=\"rooftopDeliveryCostTotal\"\r\n                label=\"Rooftop Delivery Cost\"\r\n                sideLabel=\"$\"\r\n                disabled={true}\r\n                value={roofTopDel}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <CustomInput\r\n                type=\"number\"\r\n                id=\"carryUpLabourCostTotal\"\r\n                label=\"Carry up Labour Cost\"\r\n                sideLabel=\"$\"\r\n                disabled={true}\r\n                value={(\r\n                  parseFloat(roofTopLab) +\r\n                  (parseFloat(Math.ceil(starterBundle)) +\r\n                    parseFloat(Math.ceil(capBundles))) *\r\n                    2\r\n                ).toFixed(2)}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <CustomInput\r\n                type=\"number\"\r\n                id=\"binCostTotal\"\r\n                label=\"Bin Cost\"\r\n                sideLabel=\"$\"\r\n                disabled={true}\r\n                value={pricesData.binCost === \"\" ? 0 : pricesData.binCost}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 mt-3\">\r\n              <h6>Rounded Up</h6>\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <CustomInput\r\n                type=\"number\"\r\n                id=\"bundlesRounded\"\r\n                label=\"Bundles\"\r\n                rightSideLabel=\"Bundles\"\r\n                disabled={true}\r\n                value={Math.ceil(bundles)}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <CustomInput\r\n                type=\"number\"\r\n                id=\"gableActualRounded\"\r\n                label=\"Gable Actual\"\r\n                rightSideLabel=\"Ln.ft\"\r\n                disabled={true}\r\n                value={Math.ceil(gable)}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <CustomInput\r\n                type=\"number\"\r\n                id=\"starterBundles\"\r\n                label=\"Starter Bundles\"\r\n                rightSideLabel=\"Bundles\"\r\n                disabled={true}\r\n                value={Math.ceil(starterBundle)}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <CustomInput\r\n                type=\"number\"\r\n                id=\"cappingBundles\"\r\n                label=\"Capping Bundles\"\r\n                rightSideLabel=\"Bundles\"\r\n                disabled={true}\r\n                value={Math.ceil(capBundles)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <p className=\"text-center pt-1\">Currently No Data</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst CustomInput = (props) => {\r\n  return (\r\n    <div className=\"mt-2\">\r\n      <label\r\n        htmlFor={props.id}\r\n        style={{ marginBottom: \"-1px\", marginTop: \"5px\" }}\r\n      >\r\n        {props.label}\r\n      </label>\r\n      <div className=\"input-group mb-2\">\r\n        {props.sideLabel ? (\r\n          <div className=\"input-group-prepend\">\r\n            <div\r\n              className=\"input-group-text\"\r\n              style={\r\n                props.disabled\r\n                  ? {\r\n                      backgroundColor: \"#d8dbe0\",\r\n                    }\r\n                  : {\r\n                      backgroundColor: \"#fff\",\r\n                    }\r\n              }\r\n            >\r\n              {props.sideLabel}\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        <input\r\n          type={props.type}\r\n          className=\"form-control\"\r\n          id={props.id}\r\n          name={props.id}\r\n          placeholder=\"0\"\r\n          autoComplete=\"off\"\r\n          style={props.sideLabel ? moneyInputStyle : inputStyle}\r\n          value={props.value}\r\n          onChange={props.onChange}\r\n          disabled={props.disabled}\r\n        />\r\n        {props.rightSideLabel ? (\r\n          <div className=\"input-group-prepend\">\r\n            <div\r\n              className=\"input-group-text rounded-right\"\r\n              style={\r\n                props.disabled\r\n                  ? {\r\n                      backgroundColor: \"#d8dbe0\",\r\n                      borderLeft: \"none\",\r\n                    }\r\n                  : { backgroundColor: \"#fff\", borderLeft: \"none\" }\r\n              }\r\n            >\r\n              {props.rightSideLabel}\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst inputStyle = {\r\n  outline: \"none\",\r\n  boxShadow: \"none\",\r\n  border: \"1px solid lightgray\",\r\n};\r\n\r\nconst moneyInputStyle = {\r\n  outline: \"none\",\r\n  boxShadow: \"none\",\r\n  border: \"1px solid lightgray\",\r\n  borderLeft: \"none\",\r\n  paddingLeft: \"0px\",\r\n  marginLeft: \"-11px\",\r\n};\r\n",["535","536"],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\InputTables\\CalculationsTable\\AccessoriesTable.js",["537","538","539","540"],"import React, { useEffect, useState } from \"react\";\r\n\r\n//style sheet\r\nimport \"../style.scss\";\r\n\r\nexport default function AccessoriesTable(props) {\r\n  const form = props.form;\r\n  const items = props.items;\r\n  const pricesData = props.pricesData;\r\n  const [totalEaves, setTotalEaves] = useState([]);\r\n  const [totalDrip, setTotalDrip] = useState([]);\r\n  const [totalUnderLayment, setTotalUnderLayment] = useState([]);\r\n\r\n  const getPitchValue = (val) => {\r\n    let p = 0;\r\n    if (val === \"1\") {\r\n      p = 1.003;\r\n    } else if (val === \"2\") {\r\n      p = 1.014;\r\n    } else if (val === \"3\") {\r\n      p = 1.031;\r\n    } else if (val === \"4\") {\r\n      p = 1.054;\r\n    } else if (val === \"5\") {\r\n      p = 1.083;\r\n    } else if (val === \"6\") {\r\n      p = 1.118;\r\n    } else if (val === \"7\") {\r\n      p = 1.158;\r\n    } else if (val === \"8\") {\r\n      p = 1.202;\r\n    } else if (val === \"9\") {\r\n      p = 1.25;\r\n    } else if (val === \"10\") {\r\n      p = 1.3;\r\n    } else if (val === \"11\") {\r\n      p = 1.357;\r\n    } else if (val === \"12\") {\r\n      p = 1.414;\r\n    } else if (val === \"13\") {\r\n      p = 1.474;\r\n    } else if (val === \"14\") {\r\n      p = 1.537;\r\n    } else if (val === \"15\") {\r\n      p = 1.601;\r\n    } else if (val === \"16\") {\r\n      p = 1.667;\r\n    } else if (val === \"17\") {\r\n      p = 1.734;\r\n    } else if (val === \"18\") {\r\n      p = 1.803;\r\n    }\r\n    return p;\r\n  };\r\n  const getBasicInstallValue = (val) => {\r\n    let p = 0;\r\n    if (val === \"1\") {\r\n      p = 16;\r\n    } else if (val === \"2\") {\r\n      p = 15;\r\n    } else if (val === \"3\") {\r\n      p = 15;\r\n    } else if (val === \"4\") {\r\n      p = 14;\r\n    } else if (val === \"5\") {\r\n      p = 14;\r\n    } else if (val === \"6\") {\r\n      p = 16;\r\n    } else if (val === \"7\") {\r\n      p = 21;\r\n    } else if (val === \"8\") {\r\n      p = 25;\r\n    } else if (val === \"9\") {\r\n      p = 30;\r\n    } else if (val === \"10\") {\r\n      p = 32;\r\n    } else if (val === \"11\") {\r\n      p = 35;\r\n    } else if (val === \"12\") {\r\n      p = 36;\r\n    } else if (val === \"13\") {\r\n      p = 42;\r\n    } else if (val === \"14\") {\r\n      p = 48;\r\n    } else if (val === \"15\") {\r\n      p = 49;\r\n    } else if (val === \"16\") {\r\n      p = 50;\r\n    } else if (val === \"17\") {\r\n      p = 51;\r\n    } else if (val === \"18\") {\r\n      p = 52;\r\n    }\r\n    return p;\r\n  };\r\n  //totaleaves + totalValley / 60\r\n  function IceandWaterFunc() {\r\n    var t = [];\r\n    var p = [];\r\n    items.map(function (singleElement) {\r\n      t.push(parseFloat(singleElement.eave));\r\n      p.push(parseFloat(singleElement.valleyRM));\r\n    });\r\n    var x = t.reduce((a, b) => a + b, 0);\r\n    var y = p.reduce((a, b) => a + b, 0);\r\n    return setTotalEaves(((x + y) / 60).toFixed(1));\r\n  }\r\n  //totalEaves / 9.5\r\n  function DripFunc() {\r\n    var t = [];\r\n    items.map(function (singleElement) {\r\n      t.push(parseFloat(singleElement.eave));\r\n    });\r\n    var x = t.reduce((a, b) => a + b, 0);\r\n    return setTotalDrip((x / 60).toFixed(1));\r\n  }\r\n  //totalbundles / 30\r\n  function UnderLaymentFunc() {\r\n    var t = [];\r\n    items.map((singleElement) => {\r\n      var x =\r\n        ((getPitchValue(singleElement.pitch) *\r\n          singleElement.lengthGrnd *\r\n          singleElement.width *\r\n          1.06) /\r\n          100) *\r\n          3 +\r\n        singleElement.valleyRM * 0.06;\r\n      t.push(x);\r\n      //return t.reduce((a, b) => a + b, 0);\r\n    });\r\n    var y = t.reduce((a, b) => a + b, 0);\r\n    return setTotalUnderLayment((y / 30).toFixed(1));\r\n  }\r\n  //ridgevent total rolls = ridgeVent / 19\r\n  //ice&waterMC = ice&waterWPR * priceData.iceWater\r\n  //dripMC = DripWPR * pricesData.dripEdge\r\n  //ventsMC = vent(replace + new) * prices.roofVent\r\n  //ridgeVentMC = whole number of ridge vent rolls\r\n  //pStackMC = pricesData.pStack * (one+two+three+four)\r\n  //iceand water + underlayment * rooftopDelivery\r\n\r\n  //MC Totals\r\n  const iceWaterMC = (Math.ceil(totalEaves) * pricesData.iceWater).toFixed(2);\r\n  const dripMC = (Math.ceil(totalDrip) * pricesData.dripEdge).toFixed(2);\r\n  const ventMC = (\r\n    (parseFloat(form.replace) + parseFloat(form.new)) *\r\n    pricesData.roofVent\r\n  ).toFixed(2);\r\n  const ridgeVentMC = Math.ceil(\r\n    ((form.basicRidge / 19) * pricesData.ridgeVent).toFixed(2)\r\n  );\r\n  const pStackMC = (\r\n    (parseFloat(form.oneMat) +\r\n      parseFloat(form.twoMat) +\r\n      parseFloat(form.threeMat) +\r\n      parseFloat(form.fourMat)) *\r\n    pricesData.plumbingStackMat\r\n  ).toFixed(2);\r\n  const underLaymentMC = (\r\n    Math.ceil(totalUnderLayment) * pricesData.underLayment\r\n  ).toFixed(2);\r\n  const deliveryMC = (\r\n    (Math.ceil(totalEaves) + Math.ceil(totalUnderLayment)) *\r\n    pricesData.roofTopCost\r\n  ).toFixed(2);\r\n  const totalMC = (\r\n    parseFloat(iceWaterMC) +\r\n    parseFloat(dripMC) +\r\n    parseFloat(ventMC) +\r\n    parseFloat(ridgeVentMC) +\r\n    parseFloat(pStackMC) +\r\n    parseFloat(underLaymentMC) +\r\n    parseFloat(deliveryMC)\r\n  ).toFixed(2);\r\n\r\n  useEffect(() => {\r\n    IceandWaterFunc();\r\n    DripFunc();\r\n    UnderLaymentFunc();\r\n  });\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col-12 mt-3\">\r\n          <h6>Pieces/Rolls</h6>\r\n        </div>\r\n        <div className=\"col-12 col-md-6\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"iceWPR\"\r\n            label=\"Ice & Water\"\r\n            rightSideLabel=\"Rolls\"\r\n            disabled={true}\r\n            value={totalEaves}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"dripPR\"\r\n            label=\"Drip\"\r\n            rightSideLabel=\"Pcs\"\r\n            disabled={true}\r\n            value={totalDrip}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"ridgeVentPR\"\r\n            label=\"Ridge Vent\"\r\n            rightSideLabel=\"Rolls\"\r\n            disabled={true}\r\n            value={(form.basicRidge / 19).toFixed(1)}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"underlaymentPR\"\r\n            label=\"Underlayment\"\r\n            rightSideLabel=\"Rolls\"\r\n            disabled={true}\r\n            value={totalUnderLayment}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-12 mt-3\">\r\n          <h6>Whole Pieces/Rolls</h6>\r\n        </div>\r\n        <div className=\"col-12 col-md-6\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"iceWPR\"\r\n            label=\"Ice & Water\"\r\n            rightSideLabel=\"Rolls\"\r\n            disabled={true}\r\n            value={Math.ceil(totalEaves)}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"dripWPR\"\r\n            label=\"Drip\"\r\n            rightSideLabel=\"Pcs\"\r\n            disabled={true}\r\n            value={Math.ceil(totalDrip)}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"ridgeVentWPR\"\r\n            label=\"Ridge Vent\"\r\n            rightSideLabel=\"Rolls\"\r\n            disabled={true}\r\n            value={Math.ceil((form.basicRidge / 19).toFixed(1))}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"underlaymentWPR\"\r\n            label=\"Underlayment\"\r\n            rightSideLabel=\"Rolls\"\r\n            disabled={true}\r\n            value={Math.ceil(totalUnderLayment)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-12 mt-3\">\r\n          <h6>Material Cost</h6>\r\n        </div>\r\n        <div className=\"col-12 col-md-6\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"iceMC\"\r\n            label=\"Ice & Water\"\r\n            sideLabel=\"$\"\r\n            disabled={true}\r\n            value={iceWaterMC}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"dripMC\"\r\n            label=\"Drip\"\r\n            sideLabel=\"$\"\r\n            disabled={true}\r\n            value={dripMC}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"ventMC\"\r\n            label=\"Vents\"\r\n            sideLabel=\"$\"\r\n            disabled={true}\r\n            value={ventMC}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"ridgeVentMC\"\r\n            label=\"Ridge Vent\"\r\n            sideLabel=\"$\"\r\n            disabled={true}\r\n            value={ridgeVentMC}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"pStackMC\"\r\n            label=\"Plumbing Stack\"\r\n            sideLabel=\"$\"\r\n            disabled={true}\r\n            value={pStackMC}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"underlaymentMC\"\r\n            label=\"Underlayment\"\r\n            sideLabel=\"$\"\r\n            disabled={true}\r\n            value={underLaymentMC}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"deliveryMC\"\r\n            label=\"Delivery\"\r\n            sideLabel=\"$\"\r\n            disabled={true}\r\n            value={deliveryMC}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"totalMC\"\r\n            label=\"Total\"\r\n            sideLabel=\"$\"\r\n            disabled={true}\r\n            value={totalMC}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-12 mt-3\">\r\n          <h6>Labour Cost</h6>\r\n        </div>\r\n        <div className=\"col-12 col-md-6\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"iceLC\"\r\n            label=\"Ice & Water\"\r\n            sideLabel=\"$\"\r\n            disabled={true}\r\n            value={\"33.33\"}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"dripLC\"\r\n            label=\"Drip\"\r\n            sideLabel=\"$\"\r\n            disabled={true}\r\n            value={\"21.05\"}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"ventLC\"\r\n            label=\"Vents\"\r\n            sideLabel=\"$\"\r\n            disabled={true}\r\n            value={\"20.05\"}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"ridgeVentLC\"\r\n            label=\"Ridge Vent\"\r\n            sideLabel=\"$\"\r\n            disabled={true}\r\n            value={\"0.00\"}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"pStackLC\"\r\n            label=\"P Stack\"\r\n            sideLabel=\"$\"\r\n            disabled={true}\r\n            value={\"10.00\"}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"underlaymentLC\"\r\n            label=\"Underlayment\"\r\n            sideLabel=\"$\"\r\n            disabled={true}\r\n            value={\"0.00\"}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"chimneyFlashingLC\"\r\n            label=\"Chimney Flashing\"\r\n            sideLabel=\"$\"\r\n            disabled={true}\r\n            value={\"0.00\"}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"wallFlashingLC\"\r\n            label=\"Wall Flashing\"\r\n            sideLabel=\"$\"\r\n            disabled={true}\r\n            value={\"0.00\"}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"satelliteLC\"\r\n            label=\"Satellite\"\r\n            sideLabel=\"$\"\r\n            disabled={true}\r\n            value={\"15.00\"}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"extraLC\"\r\n            label=\"Extras\"\r\n            sideLabel=\"$\"\r\n            disabled={true}\r\n            value={\"0.00\"}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-6\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"totalLC\"\r\n            label=\"Total\"\r\n            sideLabel=\"$\"\r\n            disabled={true}\r\n            value={\"99.39\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst CustomInput = (props) => {\r\n  return (\r\n    <div className=\"mt-2\">\r\n      <label\r\n        htmlFor={props.id}\r\n        style={{ marginBottom: \"-1px\", marginTop: \"5px\" }}\r\n      >\r\n        {props.label}\r\n      </label>\r\n      <div className=\"input-group mb-2\">\r\n        {props.sideLabel ? (\r\n          <div className=\"input-group-prepend\">\r\n            <div\r\n              className=\"input-group-text\"\r\n              style={\r\n                props.disabled\r\n                  ? {\r\n                      backgroundColor: \"#d8dbe0\",\r\n                    }\r\n                  : {\r\n                      backgroundColor: \"#fff\",\r\n                    }\r\n              }\r\n            >\r\n              {props.sideLabel}\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        <input\r\n          type={props.type}\r\n          className=\"form-control\"\r\n          id={props.id}\r\n          name={props.id}\r\n          placeholder=\"0\"\r\n          autoComplete=\"off\"\r\n          style={props.sideLabel ? moneyInputStyle : inputStyle}\r\n          value={props.value}\r\n          onChange={props.onChange}\r\n          disabled={props.disabled}\r\n        />\r\n        {props.rightSideLabel ? (\r\n          <div className=\"input-group-prepend\">\r\n            <div\r\n              className=\"input-group-text rounded-right\"\r\n              style={\r\n                props.disabled\r\n                  ? {\r\n                      backgroundColor: \"#d8dbe0\",\r\n                      borderLeft: \"none\",\r\n                    }\r\n                  : { backgroundColor: \"#fff\", borderLeft: \"none\" }\r\n              }\r\n            >\r\n              {props.rightSideLabel}\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst inputStyle = {\r\n  outline: \"none\",\r\n  boxShadow: \"none\",\r\n  border: \"1px solid lightgray\",\r\n};\r\n\r\nconst moneyInputStyle = {\r\n  outline: \"none\",\r\n  boxShadow: \"none\",\r\n  border: \"1px solid lightgray\",\r\n  borderLeft: \"none\",\r\n  paddingLeft: \"0px\",\r\n  marginLeft: \"-11px\",\r\n};\r\n","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\InputTables\\DataTables\\Roof.js",["541","542","543","544"],"import React, { useState, useRef } from \"react\";\r\nimport { CButton, CCollapse } from \"@coreui/react\";\r\nimport RoofFaces from \"./RoofFaces/RoofFaces\";\r\n//style sheet\r\nimport \"../style.scss\";\r\n\r\nexport default function Roof(props) {\r\n  const items = props.items;\r\n  const load = props.load;\r\n  //const form = props.form;\r\n  //const setForm = props.setForm;\r\n  const [form, setForm] = useState([]);\r\n  const [formErr, setFormErr] = useState({\r\n    lengthGrnd: false,\r\n    width: false,\r\n    eave: false,\r\n    gableGrnd: false,\r\n    valleyRM: false,\r\n    hipRM: false,\r\n    ridge: false,\r\n    wall: false,\r\n    chimney: false,\r\n\r\n    lengthGrndInc: false,\r\n    widthInc: false,\r\n    eaveInc: false,\r\n    gableGrndInc: false,\r\n    valleyRMInc: false,\r\n    hipRMInc: false,\r\n    ridgeInc: false,\r\n    wallInc: false,\r\n    chimneyInc: false,\r\n  });\r\n  const [accordion, setAccordion] = useState(null);\r\n  const topRef = useRef(null);\r\n  const removeRoofFace = props.removeRoofFace;\r\n  const [error, setError] = useState(false);\r\n  const expression = /^-?[0-9]+$/;\r\n\r\n  const ftFormFields = (field) => {\r\n    let isValid = true;\r\n    if (field === \"\" || field === undefined) {\r\n      return isValid;\r\n    } else if (field !== \"\" || field != undefined) {\r\n      if (!expression.test(field) || field > 999 || field < 0) {\r\n        isValid = false;\r\n      }\r\n    }\r\n    return isValid;\r\n  };\r\n  const incFormFields = (field) => {\r\n    let isValid = true;\r\n    if (field === \"\" || field === undefined) {\r\n      return isValid;\r\n    } else if (field !== \"\" || field != undefined) {\r\n      if (!expression.test(field) || field > 11 || field < 0) {\r\n        isValid = false;\r\n      }\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  function handleEnter(event) {\r\n    if (event.keyCode === 13) {\r\n      const inputs = event.target.form;\r\n      const index = Array.prototype.indexOf.call(inputs, event.target);\r\n      inputs.elements[index + 1].focus();\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  //add new row\r\n  const AddArray = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      form.pitch === 0 &&\r\n      form.stories === 0 &&\r\n      form.roofTop === false &&\r\n      form.bin === false &&\r\n      form.newConst === false &&\r\n      form.measureType === \"\" &&\r\n      form.totalSqFt === \"\" &&\r\n      form.eave === \"\" &&\r\n      form.gableGrnd === \"\" &&\r\n      form.valleyRM === \"\" &&\r\n      form.hipRM === \"\" &&\r\n      form.ridge === \"\" &&\r\n      form.wall === \"\" &&\r\n      form.chimney === \"\"\r\n    ) {\r\n      setError(true);\r\n      setTimeout(() => {\r\n        setError(false);\r\n      }, 4000);\r\n    } else if (form.totalSqFt === \"\") {\r\n      setError(true);\r\n      setTimeout(() => {\r\n        setError(false);\r\n      }, 4000);\r\n    } else if (!ftFormFields(form.eave)) {\r\n      setFormErr({ eave: true });\r\n    } else if (!incFormFields(form.eaveInc)) {\r\n      setFormErr({ eaveInc: true });\r\n    } else if (!ftFormFields(form.gableGrnd)) {\r\n      setFormErr({ gableGrnd: true });\r\n    } else if (!incFormFields(form.gableGrndInc)) {\r\n      setFormErr({ gableGrndInc: true });\r\n    } else if (!ftFormFields(form.valleyRM)) {\r\n      setFormErr({ valleyRM: true });\r\n    } else if (!incFormFields(form.valleyRMInc)) {\r\n      setFormErr({ valleyRMInc: true });\r\n    } else if (!ftFormFields(form.hipRM)) {\r\n      setFormErr({ hipRM: true });\r\n    } else if (!incFormFields(form.hipRMInc)) {\r\n      setFormErr({ hipRMInc: true });\r\n    } else if (!ftFormFields(form.ridge)) {\r\n      setFormErr({ ridge: true });\r\n    } else if (!incFormFields(form.ridgeInc)) {\r\n      setFormErr({ ridgeInc: true });\r\n    } else if (!ftFormFields(form.wall)) {\r\n      setFormErr({ wall: true });\r\n    } else if (!incFormFields(form.wallInc)) {\r\n      setFormErr({ wallInc: true });\r\n    } else if (!ftFormFields(form.chimney)) {\r\n      setFormErr({ chimney: true });\r\n    } else if (!incFormFields(form.chimneyInc)) {\r\n      setFormErr({ chimneyInc: true });\r\n    } else {\r\n      setFormErr(false);\r\n\r\n      let item = items;\r\n      let rT = \"\";\r\n      let b = \"\";\r\n      let nC = \"\";\r\n\r\n      if (form.roofTop === true) {\r\n        rT = \"true\";\r\n      } else {\r\n        rT = \"false\";\r\n      }\r\n\r\n      if (form.bin === true) {\r\n        b = \"true\";\r\n      } else {\r\n        b = \"false\";\r\n      }\r\n\r\n      if (form.newConst === true) {\r\n        nC = \"true\";\r\n      } else {\r\n        nC = \"false\";\r\n      }\r\n\r\n      const totalSqFt = setToZero(form.totalSqFt);\r\n      const measureType = setToZero(form.measureType);\r\n      const eave = setToZero(form.eave);\r\n      const gableGrnd = setToZero(form.gableGrnd);\r\n      const valleyRM = setToZero(form.valleyRM);\r\n      const hipRM = setToZero(form.hipRM);\r\n      const ridge = setToZero(form.ridge);\r\n      const wall = setToZero(form.wall);\r\n      const chimney = setToZero(form.chimney);\r\n\r\n      const eaveInc = setToZero(form.eaveInc);\r\n      const gableGrndInc = setToZero(form.gableGrndInc);\r\n      const valleyRMInc = setToZero(form.valleyRMInc);\r\n      const hipRMInc = setToZero(form.hipRMInc);\r\n      const ridgeInc = setToZero(form.ridgeInc);\r\n      const wallInc = setToZero(form.wallInc);\r\n      const chimneyInc = setToZero(form.chimneyInc);\r\n\r\n      item.push({\r\n        pitch: form.pitch,\r\n        stories: form.stories,\r\n        roofTop: rT,\r\n        bin: b,\r\n        newConst: nC,\r\n        measureType: measureType,\r\n        totalSqFt: totalSqFt,\r\n        eave: eave,\r\n        gableGrnd: gableGrnd,\r\n        valleyRM: valleyRM,\r\n        hipRM: hipRM,\r\n        ridge: ridge,\r\n        wall: wall,\r\n        chimney: chimney,\r\n\r\n        eaveInc: eaveInc,\r\n        gableGrndInc: gableGrndInc,\r\n        valleyRMInc: valleyRMInc,\r\n        hipRMInc: hipRMInc,\r\n        ridgeInc: ridgeInc,\r\n        wallInc: wallInc,\r\n        chimneyInc: chimneyInc,\r\n      });\r\n\r\n      setForm({\r\n        pitch: 0,\r\n        stories: 0,\r\n        roofTop: false,\r\n        bin: false,\r\n        newConst: false,\r\n        measureType: \"\",\r\n        totalSqFt: \"\",\r\n        eave: \"\",\r\n        gableGrnd: \"\",\r\n        valleyRM: \"\",\r\n        hipRM: \"\",\r\n        ridge: \"\",\r\n        wall: \"\",\r\n        chimney: \"\",\r\n        lengthGrndInc: \"\",\r\n        widthInc: \"\",\r\n        eaveInc: \"\",\r\n        gableGrndInc: \"\",\r\n        valleyRMInc: \"\",\r\n        hipRMInc: \"\",\r\n        ridgeInc: \"\",\r\n        wallInc: \"\",\r\n        chimneyInc: \"\",\r\n      });\r\n\r\n      topRef.current.focus();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {load ? (\r\n        <div className=\"text-center\">\r\n          <span>Loading...</span>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {items.map((item, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <h6\r\n                  className=\"customersTable_sliderBtn border w-100 text-center p-1\"\r\n                  onClick={() => {\r\n                    setAccordion(accordion === index ? null : index);\r\n                    console.log(\"MYINDEX\", index);\r\n                    console.log(\"MYACCORDIAN\", accordion);\r\n                  }}\r\n                >\r\n                  Roof Face {index + 1}\r\n                </h6>\r\n                <CCollapse show={accordion === index}>\r\n                  <RoofFaces\r\n                    item={item}\r\n                    keys={index}\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      removeRoofFace(index);\r\n                    }}\r\n                  />\r\n                </CCollapse>\r\n              </div>\r\n            );\r\n          })}{\" \"}\r\n        </>\r\n      )}\r\n      {items.length != 0 ? <div className=\"mt-4\"></div> : null}\r\n\r\n      <div className=\"row no-gutters\">\r\n        <div className=\"col-12 mt-2\">\r\n          <h6>Roof Face {items.length + 1}</h6>\r\n        </div>\r\n        <div className=\"col-6 gb-pr\">\r\n          <div className=\"mt-2\">\r\n            <select\r\n              ref={topRef}\r\n              className=\"form-control\"\r\n              id=\"pitch\"\r\n              name=\"pitch\"\r\n              style={inputStyle}\r\n              value={form.pitch}\r\n              onChange={(e) =>\r\n                setForm({\r\n                  ...form,\r\n                  pitch: e.target.value,\r\n                })\r\n              }\r\n            >\r\n              <option value=\"\">Pitch</option>\r\n              <option value=\"1\">1/12</option>\r\n              <option value=\"2\">2/12</option>\r\n              <option value=\"3\">3/12</option>\r\n              <option value=\"4\">4/12</option>\r\n              <option value=\"5\">5/12</option>\r\n              <option value=\"6\">6/12</option>\r\n              <option value=\"7\">7/12</option>\r\n              <option value=\"8\">8/12</option>\r\n              <option value=\"9\">9/12</option>\r\n              <option value=\"10\">10/12</option>\r\n              <option value=\"11\">11/12</option>\r\n              <option value=\"12\">12/12</option>\r\n              <option value=\"13\">13/12</option>\r\n              <option value=\"14\">14/12</option>\r\n              <option value=\"15\">15/12</option>\r\n              <option value=\"16\">16/12</option>\r\n              <option value=\"17\">17/12</option>\r\n              <option value=\"18\">18/12</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-6 gb-pl\">\r\n          <div className=\"mt-2\">\r\n            <select\r\n              className=\"form-control\"\r\n              id=\"stories\"\r\n              name=\"stories\"\r\n              style={inputStyle}\r\n              value={form.stories}\r\n              onChange={(e) =>\r\n                setForm({\r\n                  ...form,\r\n                  stories: e.target.value,\r\n                })\r\n              }\r\n            >\r\n              <option value=\"\">Stories</option>\r\n              <option value=\"1\">1</option>\r\n              <option value=\"2\">2</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-6 gb-pr mt-2\">\r\n          <CustomCheckBox\r\n            id=\"roofTop\"\r\n            label=\"Roof Top\"\r\n            checked={form.roofTop}\r\n            onChange={(e) =>\r\n              setForm({\r\n                ...form,\r\n                roofTop: e.target.checked,\r\n              })\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"col-6 mt-2 gb-pl\">\r\n          <CustomCheckBox\r\n            id=\"bin\"\r\n            label=\"Bin\"\r\n            checked={form.bin}\r\n            onChange={(e) =>\r\n              setForm({\r\n                ...form,\r\n                bin: e.target.checked,\r\n              })\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"col-6 gb-pr mt-2\">\r\n          <CustomCheckBox\r\n            id=\"newConst\"\r\n            label=\"New Construction\"\r\n            checked={form.newConst}\r\n            onChange={(e) =>\r\n              setForm({\r\n                ...form,\r\n                newConst: e.target.checked,\r\n              })\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"col-6 gb-pl\">\r\n          <div className=\"mt-2\">\r\n            <select\r\n              className=\"form-control\"\r\n              id=\"measureType\"\r\n              name=\"measureType\"\r\n              style={selectStyle}\r\n              value={form.measureType}\r\n              onChange={(e) =>\r\n                setForm({\r\n                  ...form,\r\n                  measureType: e.target.value,\r\n                })\r\n              }\r\n            >\r\n              <option value=\"\">Measure Type</option>\r\n              <option value=\"Ground Measure\">Ground Measure</option>\r\n              <option value=\"Roof Measure\">Roof Measure</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"totalsquare\"\r\n            label={`Total Square Footage of Roof Face ${items.length + 1}`}\r\n            error={formErr.totalSqFt}\r\n            value={form.totalSqFt}\r\n            onChange={(e) => {\r\n              setForm({ ...form, totalSqFt: e.target.value });\r\n            }}\r\n            single={true}\r\n          />\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"eave\"\r\n            label=\"Eaves\"\r\n            error={formErr.eave}\r\n            errorInc={formErr.eaveInc}\r\n            value={form.eave}\r\n            onChange={(e) => setForm({ ...form, eave: e.target.value })}\r\n            idInc=\"eaveInc\"\r\n            valueInc={form.eaveInc}\r\n            onChangeInc={(e) => {\r\n              setForm({\r\n                ...form,\r\n                eaveInc: e.target.value,\r\n              });\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"gableGrnd\"\r\n            label=\"Gable\"\r\n            error={formErr.gableGrnd}\r\n            errorInc={formErr.gableGrndInc}\r\n            value={form.gableGrnd}\r\n            onChange={(e) =>\r\n              setForm({\r\n                ...form,\r\n                gableGrnd: e.target.value,\r\n              })\r\n            }\r\n            idInc=\"gableGrndInc\"\r\n            valueInc={form.gableGrndInc}\r\n            onChangeInc={(e) => {\r\n              setForm({\r\n                ...form,\r\n                gableGrndInc: e.target.value,\r\n              });\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"valleyRM\"\r\n            label=\"Valley\"\r\n            error={formErr.valleyRM}\r\n            errorInc={formErr.valleyRMInc}\r\n            value={form.valleyRM}\r\n            onChange={(e) =>\r\n              setForm({\r\n                ...form,\r\n                valleyRM: e.target.value,\r\n              })\r\n            }\r\n            idInc=\"valleyRMInc\"\r\n            valueInc={form.valleyRMInc}\r\n            onChangeInc={(e) => {\r\n              setForm({\r\n                ...form,\r\n                valleyRMInc: e.target.value,\r\n              });\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"hipRM\"\r\n            label=\"Hip\"\r\n            error={formErr.hipRM}\r\n            errorInc={formErr.hipRMInc}\r\n            value={form.hipRM}\r\n            onChange={(e) =>\r\n              setForm({\r\n                ...form,\r\n                hipRM: e.target.value,\r\n              })\r\n            }\r\n            idInc=\"hipRMInc\"\r\n            valueInc={form.hipRMInc}\r\n            onChangeInc={(e) => {\r\n              setForm({\r\n                ...form,\r\n                hipRMInc: e.target.value,\r\n              });\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"ridge\"\r\n            label=\"Ridge\"\r\n            error={formErr.ridge}\r\n            errorInc={formErr.ridgeInc}\r\n            value={form.ridge}\r\n            onChange={(e) =>\r\n              setForm({\r\n                ...form,\r\n                ridge: e.target.value,\r\n              })\r\n            }\r\n            idInc=\"ridgeInc\"\r\n            valueInc={form.ridgeInc}\r\n            onChangeInc={(e) => {\r\n              setForm({\r\n                ...form,\r\n                ridgeInc: e.target.value,\r\n              });\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"wall\"\r\n            label=\"Wall to Roof Flashing\"\r\n            error={formErr.wall}\r\n            errorInc={formErr.wallInc}\r\n            value={form.wall}\r\n            onChange={(e) => setForm({ ...form, wall: e.target.value })}\r\n            idInc=\"wallInc\"\r\n            valueInc={form.wallInc}\r\n            onChangeInc={(e) => {\r\n              setForm({\r\n                ...form,\r\n                wallInc: e.target.value,\r\n              });\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"chimney\"\r\n            label=\"Chimney Flashing\"\r\n            error={formErr.chimney}\r\n            errorInc={formErr.chimneyInc}\r\n            value={form.chimney}\r\n            onChange={(e) =>\r\n              setForm({\r\n                ...form,\r\n                chimney: e.target.value,\r\n              })\r\n            }\r\n            idInc=\"chimneyInc\"\r\n            valueInc={form.chimneyInc}\r\n            onChangeInc={(e) => {\r\n              setForm({\r\n                ...form,\r\n                chimneyInc: e.target.value,\r\n              });\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 mt-4\">\r\n          {error ? (\r\n            <p className=\"text-center small text-danger\">\r\n              Please enter in at least Total Square Footage field\r\n            </p>\r\n          ) : null}\r\n          <CButton className=\"btn w-100\" style={btnStyle} onClick={AddArray}>\r\n            Complete Roof Face {items.length + 1}\r\n          </CButton>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst setToZero = (val) => {\r\n  let newVal;\r\n  if (val === \"\" || val === undefined) {\r\n    newVal = \"0\";\r\n  } else {\r\n    newVal = val;\r\n  }\r\n  return newVal;\r\n};\r\n\r\nconst CustomInput = (props) => {\r\n  return (\r\n    <div>\r\n      <div className=\"row no-gutters\">\r\n        <div className=\"col-12 mt-2\">\r\n          <span className=\"p2\">{props.label}</span>\r\n        </div>\r\n        <div className={!props.single ? \"col-6\" : \"col-12\"}>\r\n          <input\r\n            type={props.type}\r\n            className=\"form-control\"\r\n            id={props.id}\r\n            name={props.id}\r\n            maxLength=\"4\"\r\n            placeholder={!props.single ? \"Ft\" : \"Sq. Ft.\"}\r\n            autoComplete=\"off\"\r\n            style={\r\n              !props.single\r\n                ? props.error\r\n                  ? leftInputErrorStyle\r\n                  : leftInputStyle\r\n                : props.error\r\n                ? singleInputErrorStyle\r\n                : singleInputStyle\r\n            }\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n          />\r\n        </div>\r\n        {!props.single ? (\r\n          <div className=\"col-6\">\r\n            <input\r\n              type={props.type}\r\n              className=\"form-control\"\r\n              id={props.idInc}\r\n              maxLength=\"2\"\r\n              max=\"11\"\r\n              min=\"1\"\r\n              name={props.idInc}\r\n              placeholder=\"In\"\r\n              autoComplete=\"off\"\r\n              style={props.errorInc ? rightInputErrorStyle : rightInputStyle}\r\n              value={props.valueInc}\r\n              onChange={props.onChangeInc}\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CustomCheckBox = (props) => {\r\n  return (\r\n    <label\r\n      className={\r\n        props.checked ? \"btn text-white w-100\" : \"btn text-white w-100\"\r\n      }\r\n      style={\r\n        props.checked\r\n          ? { backgroundColor: \"#414141\", fontSize: \"13px\" }\r\n          : { backgroundColor: \"darkgray\", fontSize: \"13px\" }\r\n      }\r\n    >\r\n      {props.label}\r\n      <input\r\n        type=\"checkbox\"\r\n        hidden\r\n        id={props.id}\r\n        name={props.id}\r\n        checked={props.checked}\r\n        onChange={props.onChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\nconst singleInputStyle = {\r\n  outline: \"none\",\r\n  boxShadow: \"none\",\r\n  border: \"1px solid lightgray\",\r\n  borderRadius: \"0px 0.25rem 0.25rem 0px\",\r\n};\r\nconst singleInputErrorStyle = {\r\n  outline: \"none\",\r\n  boxShadow: \"none\",\r\n  border: \"1px solid #e60029\",\r\n  borderRadius: \"0px 0.25rem 0.25rem 0px\",\r\n};\r\nconst leftInputStyle = {\r\n  outline: \"none\",\r\n  boxShadow: \"none\",\r\n  border: \"1px solid lightgray\",\r\n  borderRight: \"0px\",\r\n  borderRadius: \"0.25rem 0px 0px 0.25rem\",\r\n};\r\nconst leftInputErrorStyle = {\r\n  outline: \"none\",\r\n  boxShadow: \"none\",\r\n  border: \"1px solid #e60029\",\r\n  borderRight: \"0px\",\r\n  borderRadius: \"0.25rem 0px 0px 0.25rem\",\r\n};\r\nconst rightInputStyle = {\r\n  outline: \"none\",\r\n  boxShadow: \"none\",\r\n  border: \"1px solid lightgray\",\r\n  borderRadius: \"0px 0.25rem 0.25rem 0px\",\r\n};\r\nconst rightInputErrorStyle = {\r\n  outline: \"none\",\r\n  boxShadow: \"none\",\r\n  border: \"1px solid #e60029\",\r\n  borderRadius: \"0px 0.25rem 0.25rem 0px\",\r\n};\r\n\r\nconst inputStyle = {\r\n  outline: \"none\",\r\n  boxShadow: \"none\",\r\n  border: \"1px solid lightgray\",\r\n};\r\nconst selectStyle = {\r\n  outline: \"none\",\r\n  boxShadow: \"none\",\r\n  border: \"1px solid lightgray\",\r\n  height: \"32px\",\r\n  fontSize: \"13px\",\r\n};\r\nconst btnStyle = {\r\n  outline: \"none\",\r\n  boxShadow: \"none\",\r\n  border: \"none\",\r\n  backgroundColor: \"#e60029\",\r\n  color: \"#fff\",\r\n};\r\n","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\InputTables\\DataTables\\Eaves.js",["545","546","547","548","549","550","551"],"import React, { useState, useEffect } from \"react\";\r\nimport { CButton } from \"@coreui/react\";\r\n\r\nexport default function Eaves(props) {\r\n  //const form = props.form;\r\n  //const setForm = props.setForm;\r\n  const [form, setForm] = useState([]);\r\n  const items = props.items;\r\n  const eaveItems = props.eaveItems;\r\n  const removeEave = props.removeEave;\r\n  const [msg, setMsg] = useState(false);\r\n  const removeMsg = props.removeMsg;\r\n  const expression = /^-?[0-9]+$/;\r\n\r\n  const [formErr, setFormErr] = useState({\r\n    adjOneStory: false,\r\n    adjOneStoryInc: false,\r\n    allForm: false,\r\n  });\r\n  const ftFormFields = (field) => {\r\n    let isValid = true;\r\n    if (field != \"\" && field !== undefined) {\r\n      if (!expression.test(field) || field > 999 || field < -10) {\r\n        isValid = false;\r\n      }\r\n    }\r\n    return isValid;\r\n  };\r\n  const incFormFields = (field) => {\r\n    let isValid = true;\r\n    if (field !== \"\" && field !== undefined) {\r\n      if (!expression.test(field) || field > 11 || field < -11) {\r\n        isValid = false;\r\n      }\r\n    }\r\n    return isValid;\r\n  };\r\n  const inchConverter = (val) => {\r\n    let newVal = 0;\r\n    if (val === \"1\") {\r\n      newVal = 0.0833;\r\n    } else if (val === \"2\") {\r\n      newVal = 0.1666;\r\n    } else if (val === \"3\") {\r\n      newVal = 0.25;\r\n    } else if (val === \"4\") {\r\n      newVal = 0.3333;\r\n    } else if (val === \"5\") {\r\n      newVal = 0.4166;\r\n    } else if (val === \"6\") {\r\n      newVal = 0.5;\r\n    } else if (val === \"7\") {\r\n      newVal = 0.5833;\r\n    } else if (val === \"8\") {\r\n      newVal = 0.6666;\r\n    } else if (val === \"9\") {\r\n      newVal = 0.75;\r\n    } else if (val === \"10\") {\r\n      newVal = 0.8333;\r\n    } else if (val === \"11\") {\r\n      newVal = 0.9166;\r\n    } else if (val === \"-1\") {\r\n      newVal = -0.0833;\r\n    } else if (val === \"-2\") {\r\n      newVal = -0.1666;\r\n    } else if (val === \"-3\") {\r\n      newVal = -0.25;\r\n    } else if (val === \"-4\") {\r\n      newVal = -0.3333;\r\n    } else if (val === \"-5\") {\r\n      newVal = -0.4166;\r\n    } else if (val === \"-6\") {\r\n      newVal = -0.5;\r\n    } else if (val === \"-7\") {\r\n      newVal = -0.5833;\r\n    } else if (val === \"-8\") {\r\n      newVal = -0.6666;\r\n    } else if (val === \"-9\") {\r\n      newVal = -0.75;\r\n    } else if (val === \"-10\") {\r\n      newVal = -0.8333;\r\n    } else if (val === \"-11\") {\r\n      newVal = -0.9166;\r\n    }\r\n    return newVal;\r\n  };\r\n  const reverseInchConverter = (val) => {\r\n    let newVal = 0;\r\n    if (val <= \"0834\" && val > \"0800\") {\r\n      newVal = 1;\r\n    } else if (val <= \"1667\" && val > \"0834\") {\r\n      newVal = 2;\r\n    } else if (val <= \"2500\" && val > \"1667\") {\r\n      newVal = 3;\r\n    } else if (val <= \"3334\" && val > \"2500\") {\r\n      newVal = 4;\r\n    } else if (val <= \"4167\" && val > \"3334\") {\r\n      newVal = 5;\r\n    } else if (val <= \"5000\" && val > \"4167\") {\r\n      newVal = 6;\r\n    } else if (val <= \"5834\" && val > \"5000\") {\r\n      newVal = 7;\r\n    } else if (val <= \"6667\" && val > \"5834\") {\r\n      newVal = 8;\r\n    } else if (val <= \"7500\" && val > \"6667\") {\r\n      newVal = 9;\r\n    } else if (val <= \"8334\" && val > \"7500\") {\r\n      newVal = 10;\r\n    } else if (val <= \"9166\" && val > \"8334\") {\r\n      newVal = 11;\r\n    } else {\r\n      newVal = 0;\r\n    }\r\n    return newVal;\r\n  };\r\n  const uslessFunc = (val) => {\r\n    let t = 0;\r\n    t = parseInt(val);\r\n    return t;\r\n  };\r\n  //1st Sotries Eaves\r\n  const [firstStoryEaves, setFirstStoryEaves] = useState([]);\r\n  const [firstStoryEavesInc, setFirstStoryEavesInc] = useState(\"\");\r\n  const FirstStoryEaves = () => {\r\n    var t = [];\r\n    var y = [];\r\n    var e = [];\r\n\r\n    items.map(function (singleElement) {\r\n      e.push(parseFloat(singleElement.stories));\r\n      const index = e.indexOf(2);\r\n      if (index > -1) {\r\n        e.splice(index, 1);\r\n        e.push(parseFloat(singleElement.eave));\r\n        return e;\r\n      }\r\n      t.push(parseFloat(singleElement.eave));\r\n      t.push(inchConverter(singleElement.eaveInc));\r\n      return t;\r\n    });\r\n    //reverseInchConverter\r\n    if (form.adjOneStoryInc !== \"\") {\r\n      t.push(inchConverter(form.adjOneStoryInc));\r\n    }\r\n\r\n    setFirstStoryEaves(Math.floor(t.reduce((a, b) => a + b, 0)));\r\n\r\n    y = t.reduce((a, b) => a + b, 0).toFixed(4);\r\n    var str = y.toString();\r\n    str = str.substring(str.indexOf(\".\") + 1);\r\n    setFirstStoryEavesInc(reverseInchConverter(str));\r\n    if (str === \"9999\") {\r\n      setFirstStoryEaves(firstStoryEaves + 1);\r\n    }\r\n  };\r\n  //2nd Stories Eaves\r\n  const [secondStoryEaves, setSecondStoryEaves] = useState([]);\r\n  const [secondStoryEavesInc, setSecondStoryEavesInc] = useState([]);\r\n  const SecondStoryEaves = () => {\r\n    var t = [];\r\n    var y = [];\r\n    var e = [];\r\n\r\n    items.map(function (singleElement) {\r\n      e.push(parseFloat(singleElement.stories));\r\n      const index = e.indexOf(1);\r\n      if (index > -1) {\r\n        e.splice(index, 1);\r\n        e.push(parseFloat(singleElement.eave));\r\n        return e;\r\n      }\r\n      t.push(parseFloat(singleElement.eave));\r\n      t.push(inchConverter(singleElement.eaveInc));\r\n      return t;\r\n    });\r\n    //reverseInchConverter\r\n    if (form.adjTwoStoryInc !== \"\") {\r\n      t.push(inchConverter(form.adjTwoStoryInc));\r\n    }\r\n\r\n    setSecondStoryEaves(Math.floor(t.reduce((a, b) => a + b, 0)));\r\n\r\n    y = t.reduce((a, b) => a + b, 0).toFixed(4);\r\n    var str = y.toString();\r\n    str = str.substring(str.indexOf(\".\") + 1);\r\n    setSecondStoryEavesInc(reverseInchConverter(str));\r\n    if (str === \"9999\") {\r\n      setSecondStoryEaves(secondStoryEaves + 1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    FirstStoryEaves();\r\n    SecondStoryEaves();\r\n  });\r\n\r\n  useEffect(() => {\r\n    ftFormFields(form.adjOneStory)\r\n      ? setFormErr({ adjOneStory: false })\r\n      : setFormErr({ adjOneStory: true });\r\n  }, [form.adjOneStory]);\r\n\r\n  useEffect(() => {\r\n    incFormFields(form.adjOneStoryInc)\r\n      ? setFormErr({ adjOneStoryInc: false })\r\n      : setFormErr({ adjOneStoryInc: true });\r\n  }, [form.adjOneStoryInc]);\r\n\r\n  useEffect(() => {\r\n    ftFormFields(form.adjTwoStory)\r\n      ? setFormErr({ adjTwoStory: false })\r\n      : setFormErr({ adjTwoStory: true });\r\n  }, [form.adjTwoStory]);\r\n\r\n  useEffect(() => {\r\n    ftFormFields(form.adjTwoStoryInc)\r\n      ? setFormErr({ adjTwoStoryInc: false })\r\n      : setFormErr({ adjTwoStoryInc: true });\r\n  }, [form.adjTwoStoryInc]);\r\n\r\n  //add new row\r\n  const AddArray = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      form.oneStoryPrice === undefined ||\r\n      (form.oneStoryPrice === \"\" && form.oneStoryPrice === undefined) ||\r\n      (form.oneStoryPrice === \"\" && form.twoStoryPrice === undefined) ||\r\n      (form.twoStoryPrice === \"\" && form.cornersPrice === undefined) ||\r\n      (form.cornersPrice === \"\" && form.oneStoryDownPrice === undefined) ||\r\n      (form.oneStoryDownPrice === \"\" && form.twoStoryDownPrice === undefined) ||\r\n      (form.twoStoryDownPrice === \"\" &&\r\n        form.extraExtensionsPrice === undefined) ||\r\n      (form.extraExtensionsPrice === \"\" &&\r\n        form.difficultyPrice === undefined) ||\r\n      form.difficultyPrice === \"\"\r\n    ) {\r\n      setFormErr({ allForm: true });\r\n      setTimeout(() => {\r\n        setFormErr({ allForm: false });\r\n      }, 4000);\r\n    } else {\r\n      const adjOneStory = setToZero(form.adjOneStory);\r\n      const adjOneStoryInc = setToZero(form.adjOneStoryInc);\r\n      const adjTwoStory = setToZero(form.adjTwoStory);\r\n      const adjTwoStoryInc = setToZero(form.adjTwoStoryInc);\r\n      const corners = setToZero(form.corners);\r\n      const oneStoryDown = setToZero(form.oneStoryDown);\r\n      const twoStoryDown = setToZero(form.twoStoryDown);\r\n      const extraExtensions = setToZero(form.extraExtensions);\r\n      const elbows = setToZero(form.elbows);\r\n\r\n      const oneStoryPrice = setToZero(form.oneStoryPrice);\r\n      const adjOneStoryPrice = setToZero(form.adjOneStoryPrice);\r\n      const twoStoryPrice = setToZero(form.twoStoryPrice);\r\n      const adjTwoStoryPrice = setToZero(form.adjTwoStoryPrice);\r\n      const cornersPrice = setToZero(form.cornersPrice);\r\n      const oneStoryDownPrice = setToZero(form.oneStoryDownPrice);\r\n      const twoStoryDownPrice = setToZero(form.twoStoryDownPrice);\r\n      const extraExtensionsPrice = setToZero(form.extraExtensionsPrice);\r\n      const difficultyPrice = setToZero(form.difficultyPrice);\r\n      const oneStoryEaves = setToZero(form.oneStoryEaves);\r\n\r\n      eaveItems.push({\r\n        adjOneStory: adjOneStory,\r\n        adjOneStoryInc: adjOneStoryInc,\r\n        adjTwoStory: adjTwoStory,\r\n        adjTwoStoryInc: adjTwoStoryInc,\r\n        corners: corners,\r\n        oneStoryDown: oneStoryDown,\r\n        twoStoryDown: twoStoryDown,\r\n        extraExtensions: extraExtensions,\r\n        elbows: elbows,\r\n\r\n        oneStoryPrice: oneStoryPrice,\r\n        adjOneStoryPrice: adjOneStoryPrice,\r\n        twoStoryPrice: twoStoryPrice,\r\n        adjTwoStoryPrice: adjTwoStoryPrice,\r\n        cornersPrice: cornersPrice,\r\n        oneStoryDownPrice: oneStoryDownPrice,\r\n        twoStoryDownPrice: twoStoryDownPrice,\r\n        extraExtensionsPrice: extraExtensionsPrice,\r\n        difficultyPrice: difficultyPrice,\r\n        oneStoryEaves: oneStoryEaves,\r\n      });\r\n\r\n      setMsg(true);\r\n      setTimeout(() => {\r\n        setMsg(false);\r\n      }, 4000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <h6>Measurements</h6>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <CustomInput\r\n            type=\"text\"\r\n            id=\"firstSE\"\r\n            placeholder=\"1st Story Eaves\"\r\n            label=\"1st Story Eaves\"\r\n            rightSideLabel=\"Ft.In\"\r\n            value={\r\n              form.adjOneStory\r\n                ? `${\r\n                    firstStoryEaves + parseInt(form.adjOneStory)\r\n                  }' - ${firstStoryEavesInc}\"`\r\n                : `${firstStoryEaves}' - ${firstStoryEavesInc}\"`\r\n            }\r\n            disabled={true}\r\n          />\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <CustomSplitInput\r\n            type=\"number\"\r\n            id=\"adjOneStory\"\r\n            label=\"1st Story Eavethrough Adjustment\"\r\n            error={formErr.adjOneStory}\r\n            errorInc={formErr.adjOneStoryInc}\r\n            value={form.adjOneStory}\r\n            onChange={(e) =>\r\n              setForm({\r\n                ...form,\r\n                adjOneStory: e.target.value,\r\n              })\r\n            }\r\n            idInc=\"adjOneStoryInc\"\r\n            valueInc={form.adjOneStoryInc}\r\n            onChangeInc={(e) => {\r\n              setForm({\r\n                ...form,\r\n                adjOneStoryInc: e.target.value,\r\n              });\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <CustomInput\r\n            type=\"text\"\r\n            id=\"secondSE\"\r\n            placeholder=\"2nd Story Eaves\"\r\n            label=\"2nd Story Eaves\"\r\n            rightSideLabel=\"Ft.In\"\r\n            value={\r\n              form.adjTwoStory\r\n                ? `${\r\n                    secondStoryEaves + parseInt(form.adjTwoStory)\r\n                  }' - ${secondStoryEavesInc}\"`\r\n                : `${secondStoryEaves}' - ${secondStoryEavesInc}\"`\r\n            }\r\n            disabled={true}\r\n          />\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <CustomSplitInput\r\n            type=\"number\"\r\n            id=\"adjTwoStory\"\r\n            label=\"2nd Story Eavethrough Adjustment\"\r\n            error={formErr.adjTwoStory}\r\n            errorInc={formErr.adjTwoStoryInc}\r\n            value={form.adjTwoStory}\r\n            onChange={(e) =>\r\n              setForm({\r\n                ...form,\r\n                adjTwoStory: e.target.value,\r\n              })\r\n            }\r\n            idInc=\"adjTwoStoryInc\"\r\n            valueInc={form.adjTwoStoryInc}\r\n            onChangeInc={(e) => {\r\n              setForm({\r\n                ...form,\r\n                adjTwoStoryInc: e.target.value,\r\n              });\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"corners\"\r\n            label=\"Eavestrough Corners\"\r\n            placeholder=\"Eavestrough Corners\"\r\n            rightSideLabel=\"Corners\"\r\n            value={form.corners}\r\n            onChange={(e) =>\r\n              setForm({\r\n                ...form,\r\n                corners: e.target.value,\r\n              })\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"oneStoryDown\"\r\n            label=\"1st Story Downspouts\"\r\n            placeholder=\"1st Story Downspouts\"\r\n            rightSideLabel=\"Downspouts\"\r\n            value={form.oneStoryDown}\r\n            onChange={(e) =>\r\n              setForm({\r\n                ...form,\r\n                oneStoryDown: e.target.value,\r\n              })\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"twoStoryDown\"\r\n            label=\"2nd Story Downspouts\"\r\n            placeholder=\"2nd Story Downspouts\"\r\n            rightSideLabel=\"Downspouts\"\r\n            value={form.twoStoryDown}\r\n            onChange={(e) =>\r\n              setForm({\r\n                ...form,\r\n                twoStoryDown: e.target.value,\r\n              })\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"extraExtensions\"\r\n            label=\"Downspout Extensions\"\r\n            placeholder=\"Downspout Extensions\"\r\n            rightSideLabel=\"Extensions\"\r\n            value={form.extraExtensions}\r\n            onChange={(e) =>\r\n              setForm({\r\n                ...form,\r\n                extraExtensions: e.target.value,\r\n              })\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"elbow\"\r\n            label=\"Elbows\"\r\n            placeholder=\"Elbows\"\r\n            rightSideLabel=\"Elbows\"\r\n            value={form.elbows}\r\n            onChange={(e) =>\r\n              setForm({\r\n                ...form,\r\n                elbows: e.target.value,\r\n              })\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"col-12 mt-3\">\r\n          <h6>Prices</h6>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"oneStoryPrice\"\r\n            label=\"1st Story Eavestroughs\"\r\n            placeholder=\"1st Story Eavestroughs\"\r\n            sideLabel=\"$\"\r\n            rightSideLabel=\"Ln.ft\"\r\n            value={form.oneStoryPrice}\r\n            onChange={(e) =>\r\n              setForm({\r\n                ...form,\r\n                oneStoryPrice: e.target.value,\r\n              })\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"twoStoryPrice\"\r\n            label=\"2nd Story Eavestroughs\"\r\n            placeholder=\"2nd Story Eavestroughs\"\r\n            sideLabel=\"$\"\r\n            rightSideLabel=\"Ln.ft\"\r\n            value={form.twoStoryPrice}\r\n            onChange={(e) =>\r\n              setForm({\r\n                ...form,\r\n                twoStoryPrice: e.target.value,\r\n              })\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"cornersPrice\"\r\n            label=\"Corner\"\r\n            placeholder=\"Corner\"\r\n            sideLabel=\"$\"\r\n            rightSideLabel=\"Corner\"\r\n            value={form.cornersPrice}\r\n            onChange={(e) =>\r\n              setForm({\r\n                ...form,\r\n                cornersPrice: e.target.value,\r\n              })\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"oneStoryDownPrice\"\r\n            label=\"1st Story Downspouts\"\r\n            placeholder=\"1st Story Downspouts\"\r\n            sideLabel=\"$\"\r\n            rightSideLabel=\"Downspout\"\r\n            value={form.oneStoryDownPrice}\r\n            onChange={(e) =>\r\n              setForm({\r\n                ...form,\r\n                oneStoryDownPrice: e.target.value,\r\n              })\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"twoStoryDownPrice\"\r\n            label=\"2nd Story Downspouts\"\r\n            placeholder=\"2nd Story Downspouts\"\r\n            sideLabel=\"$\"\r\n            rightSideLabel=\"Downspout\"\r\n            value={form.twoStoryDownPrice}\r\n            onChange={(e) =>\r\n              setForm({\r\n                ...form,\r\n                twoStoryDownPrice: e.target.value,\r\n              })\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"extraExtensionsPrice\"\r\n            label=\"Downspout Extensions\"\r\n            placeholder=\"Downspout Extensions\"\r\n            sideLabel=\"$\"\r\n            rightSideLabel=\"Extensions\"\r\n            value={form.extraExtensionsPrice}\r\n            onChange={(e) =>\r\n              setForm({\r\n                ...form,\r\n                extraExtensionsPrice: e.target.value,\r\n              })\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"difficultyPrice\"\r\n            label=\"Project Difficulty Fee\"\r\n            placeholder=\"Project Difficulty Fee\"\r\n            sideLabel=\"$\"\r\n            rightSideLabel=\"Difficulty\"\r\n            value={form.difficultyPrice}\r\n            onChange={(e) =>\r\n              setForm({\r\n                ...form,\r\n                difficultyPrice: e.target.value,\r\n              })\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"col-12 mt-3\">\r\n          <h6>Total</h6>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"totalOSP\"\r\n            //label=\"1stStoryEave + 1stStoryAdjustment * 1stStoryPrice\"\r\n            label=\"1st Story Eavestrough Total\"\r\n            sideLabel=\"$\"\r\n            disabled={true}\r\n            value={\r\n              form.oneStoryPrice\r\n                ? form.adjOneStory\r\n                  ? form.difficultyPrice\r\n                    ? (\r\n                        parseFloat(form.difficultyPrice) +\r\n                        (firstStoryEaves +\r\n                          parseInt(form.adjOneStory) +\r\n                          inchConverter(firstStoryEavesInc.toString())) *\r\n                          form.oneStoryPrice\r\n                      ).toFixed(2)\r\n                    : (\r\n                        (firstStoryEaves +\r\n                          parseInt(form.adjOneStory) +\r\n                          inchConverter(firstStoryEavesInc.toString())) *\r\n                        form.oneStoryPrice\r\n                      ).toFixed(2)\r\n                  : form.difficultyPrice\r\n                  ? (\r\n                      parseFloat(form.difficultyPrice) +\r\n                      (firstStoryEaves +\r\n                        inchConverter(firstStoryEavesInc.toString())) *\r\n                        form.oneStoryPrice\r\n                    ).toFixed(2)\r\n                  : (\r\n                      (firstStoryEaves +\r\n                        inchConverter(firstStoryEavesInc.toString())) *\r\n                      form.oneStoryPrice\r\n                    ).toFixed(2)\r\n                : \"0.00\"\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"totalTSP\"\r\n            //label=\"2ndStoryEave + 2ndStoryAdjustment * 2ndStoryPrice\"\r\n            label=\"2nd Story Eavestrough Total\"\r\n            sideLabel=\"$\"\r\n            disabled={true}\r\n            value={\r\n              form.twoStoryPrice\r\n                ? form.adjTwoStory\r\n                  ? (\r\n                      (secondStoryEaves +\r\n                        parseInt(form.adjTwoStory) +\r\n                        inchConverter(secondStoryEavesInc.toString())) *\r\n                      form.twoStoryPrice\r\n                    ).toFixed(2)\r\n                  : (\r\n                      (secondStoryEaves +\r\n                        inchConverter(secondStoryEavesInc.toString())) *\r\n                      form.twoStoryPrice\r\n                    ).toFixed(2)\r\n                : \"0.00\"\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"totalCorner\"\r\n            //label=\"Corner * Corner Price\"\r\n            label=\"Eavestrough Corners Total\"\r\n            sideLabel=\"$\"\r\n            disabled={true}\r\n            value={\r\n              form.cornersPrice ? form.corners * form.cornersPrice : \"0.00\"\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"totalOSPD\"\r\n            //label=\"1stStoryDown * 1stStoryDownPrice\"\r\n            label=\"1st Story Downspouts Total\"\r\n            sideLabel=\"$\"\r\n            disabled={true}\r\n            value={\r\n              form.oneStoryDownPrice\r\n                ? form.oneStoryDown * form.oneStoryDownPrice\r\n                : \"0.00\"\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"totalTSPD\"\r\n            label=\"2nd Story Downspouts Total\"\r\n            sideLabel=\"$\"\r\n            disabled={true}\r\n            value={\r\n              form.twoStoryDownPrice\r\n                ? form.twoStoryDown * form.twoStoryDownPrice\r\n                : \"0.00\"\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <CustomInput\r\n            type=\"number\"\r\n            id=\"totalEXE\"\r\n            label=\"Downspouts Extension Total\"\r\n            sideLabel=\"$\"\r\n            disabled={true}\r\n            value={\r\n              form.extraExtensionsPrice\r\n                ? form.extraExtensions * form.extraExtensionsPrice\r\n                : \"0.00\"\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"col-12 text-center  mt-4\">\r\n          {formErr.allForm ? (\r\n            <span className=\"text-danger\">\r\n              Please enter in at least 1 field\r\n            </span>\r\n          ) : null}\r\n          {msg ? <span className=\"text-success\">Added to Estimate</span> : null}\r\n          {removeMsg ? (\r\n            <span className=\"text-danger\">Removed from Estimate</span>\r\n          ) : null}\r\n          {eaveItems.length === 0 ? (\r\n            <CButton className=\"btn w-100\" style={btnStyle} onClick={AddArray}>\r\n              Complete Eavetroughs\r\n            </CButton>\r\n          ) : (\r\n            <CButton\r\n              className=\"btn w-100\"\r\n              style={btnStyle}\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                eaveItems.map((n, i) => {\r\n                  removeEave(i);\r\n                });\r\n                setForm({\r\n                  adjOneStory: \"\",\r\n                  adjOneStoryInc: \"\",\r\n                  adjTwoStory: \"\",\r\n                  adjTwoStoryInc: \"\",\r\n                  corners: \"\",\r\n                  oneStoryDown: \"\",\r\n                  twoStoryDown: \"\",\r\n                  extraExtensions: \"\",\r\n                  elbows: \"\",\r\n\r\n                  oneStoryPrice: 0,\r\n                  adjOneStoryPrice: 0,\r\n                  twoStoryPrice: 0,\r\n                  adjTwoStoryPrice: 0,\r\n                  cornersPrice: 0,\r\n                  oneStoryDownPrice: 0,\r\n                  twoStoryDownPrice: 0,\r\n                  extraExtensionsPrice: 0,\r\n                  difficultyPrice: 0,\r\n                  oneStoryEaves: 0,\r\n                });\r\n              }}\r\n            >\r\n              Reset Eavetroughs\r\n            </CButton>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst CustomSplitInput = (props) => {\r\n  return (\r\n    <div>\r\n      <div className=\"row no-gutters\">\r\n        <div className=\"col-12 mt-2\">\r\n          <span className=\"p2\">{props.label}</span>\r\n        </div>\r\n        <div className=\"col-6\">\r\n          <input\r\n            type={props.type}\r\n            className=\"form-control\"\r\n            id={props.id}\r\n            name={props.id}\r\n            maxLength={3}\r\n            min={1}\r\n            max={999}\r\n            placeholder=\"Ft\"\r\n            autoComplete=\"off\"\r\n            style={props.error ? leftInputErrorStyle : leftInputStyle}\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n          />\r\n        </div>\r\n        <div className=\"col-6\">\r\n          <input\r\n            type={props.type}\r\n            className=\"form-control\"\r\n            id={props.idInc}\r\n            maxLength={2}\r\n            max={11}\r\n            min={1}\r\n            name={props.idInc}\r\n            placeholder=\"In\"\r\n            autoComplete=\"off\"\r\n            style={props.errorInc ? rightInputErrorStyle : rightInputStyle}\r\n            value={props.valueInc}\r\n            onChange={props.onChangeInc}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CustomInput = (props) => {\r\n  return (\r\n    <div className=\"mt-2\">\r\n      <label\r\n        className=\"p2\"\r\n        style={{\r\n          maxWidth: \"100%\",\r\n          overflow: \"hidden\",\r\n          textOverflow: \"ellipsis\",\r\n          whiteSpace: \"nowrap\",\r\n          marginBottom: \"-2px\",\r\n        }}\r\n      >\r\n        {props.label}\r\n      </label>\r\n      <div className=\"input-group\">\r\n        {props.sideLabel ? (\r\n          <div className=\"input-group-prepend\">\r\n            <div\r\n              className=\"input-group-text\"\r\n              style={\r\n                props.disabled\r\n                  ? { backgroundColor: \"#d8dbe0\" }\r\n                  : { backgroundColor: \"#fff\" }\r\n              }\r\n            >\r\n              {props.sideLabel}\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        <input\r\n          type={props.type}\r\n          className=\"form-control\"\r\n          id={props.id}\r\n          name={props.id}\r\n          placeholder={props.placeholder}\r\n          style={props.sideLabel ? moneyInputStyle : inputStyle}\r\n          value={props.value}\r\n          onChange={props.onChange}\r\n          disabled={props.disabled}\r\n        />\r\n        {props.rightSideLabel ? (\r\n          <div className=\"input-group-prepend\">\r\n            <div\r\n              className=\"input-group-text rounded-right\"\r\n              style={\r\n                props.disabled\r\n                  ? {\r\n                      backgroundColor: \"#d8dbe0\",\r\n                      borderLeft: \"none\",\r\n                    }\r\n                  : {\r\n                      backgroundColor: \"#fff\",\r\n                      borderLeft: \"none\",\r\n                    }\r\n              }\r\n            >\r\n              {props.rightSideLabel}\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst setToZero = (val) => {\r\n  let newVal;\r\n  if (val === \"\" || val === undefined) {\r\n    newVal = \"0\";\r\n  } else {\r\n    newVal = val;\r\n  }\r\n  return newVal;\r\n};\r\n\r\nconst inputStyle = {\r\n  outline: \"none\",\r\n  boxShadow: \"none\",\r\n  border: \"1px solid lightgray\",\r\n};\r\n\r\nconst moneyInputStyle = {\r\n  outline: \"none\",\r\n  boxShadow: \"none\",\r\n  border: \"1px solid lightgray\",\r\n  borderLeft: \"none\",\r\n  paddingLeft: \"0px\",\r\n  marginLeft: \"-11px\",\r\n};\r\n\r\nconst leftInputStyle = {\r\n  outline: \"none\",\r\n  boxShadow: \"none\",\r\n  border: \"1px solid lightgray\",\r\n  borderRight: \"0px\",\r\n  borderRadius: \"0.25rem 0px 0px 0.25rem\",\r\n};\r\nconst leftInputErrorStyle = {\r\n  outline: \"none\",\r\n  boxShadow: \"none\",\r\n  border: \"1px solid #e60029\",\r\n  borderRight: \"0px\",\r\n  borderRadius: \"0.25rem 0px 0px 0.25rem\",\r\n};\r\nconst rightInputStyle = {\r\n  outline: \"none\",\r\n  boxShadow: \"none\",\r\n  border: \"1px solid lightgray\",\r\n  borderRadius: \"0px 0.25rem 0.25rem 0px\",\r\n};\r\nconst rightInputErrorStyle = {\r\n  outline: \"none\",\r\n  boxShadow: \"none\",\r\n  border: \"1px solid #e60029\",\r\n  borderRadius: \"0px 0.25rem 0.25rem 0px\",\r\n};\r\nconst btnStyle = {\r\n  outline: \"none\",\r\n  boxShadow: \"none\",\r\n  border: \"none\",\r\n  backgroundColor: \"#e60029\",\r\n  color: \"#fff\",\r\n};\r\n","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\Tabs\\NewCust.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\signup\\Signup.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\signup\\SignupForm.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\ForgotPass\\ForgotPass.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\ForgotPass\\ForgotPassForm.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\PasswordReset\\ResetPass.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\PasswordReset\\ResetPassForm.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\routing\\PrivateRoute.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\VerifyEmail\\VerifyEmail.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\Photos\\SinglePhotos\\SinglePhotos.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\Photos\\SinglePhotos\\LargeSinglePhoto.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\Tabs\\Quoted.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\Tabs\\InProgress.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\Tabs\\Complete.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\Tabs\\Signed.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\Tabs\\Invoiced.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\Photos\\Album.js",["552","553","554","555"],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\Photos\\Photos.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\Documents\\Documents.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\Diagrams\\Diagrams.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\Diagrams\\SingleImage\\LargeDiagramPhoto.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\InputTables\\DataTables\\RoofFaces\\RoofFaces.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\InputTables\\CalculationsTable\\CalculationsFaces\\CalculationsFaces.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\InputTables\\DataTables\\Selections.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\Tools\\Tools.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\Tools\\CostsTable\\Materials.js",["556"],"import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nexport default function Materials() {\r\n  const [pricesData, setPricesData] = useState([]);\r\n  const [dataErr, setDataErr] = useState([]);\r\n  const [err, setErr] = useState(false);\r\n  const email = localStorage.getItem(\"email\");\r\n  const passToken = localStorage.getItem(\"passToken\");\r\n  const [msg, setMsg] = useState([]);\r\n\r\n  const checkFields = (field) => {\r\n    let isValid = true;\r\n    if (field !== \"\") {\r\n      if (field > 999 || field < 0) {\r\n        isValid = false;\r\n      } else {\r\n        isValid = true;\r\n      }\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (pricesData === \"\") {\r\n      setErr(true);\r\n      setTimeout(() => {\r\n        setErr(false);\r\n      }, 4000);\r\n    } else {\r\n      if (checkForm()) {\r\n        Axios.post(\"/api/price/materialpriceupdate\", {\r\n          pricesData,\r\n          email,\r\n          passToken,\r\n        })\r\n          .then((res) => {\r\n            setMsg({ ...msg, success: true });\r\n            setTimeout(() => {\r\n              setMsg({ ...msg, success: false });\r\n            }, 4000);\r\n            console.log(res);\r\n          })\r\n          .catch((error) => {\r\n            setMsg({ ...msg, failed: true });\r\n            setTimeout(() => {\r\n              setMsg({ ...msg, failed: false });\r\n            }, 4000);\r\n            console.log(error);\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkForm = () => {\r\n    let isValid = true;\r\n\r\n    if (!checkFields(pricesData.groundDropCost)) {\r\n      setDataErr({ groundDropCost: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.roofTopCost)) {\r\n      setDataErr({ roofTopCost: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.bundle)) {\r\n      setDataErr({ bundle: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.starterBundle)) {\r\n      setDataErr({ starterBundle: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.cappingBundle)) {\r\n      setDataErr({ cappingBundle: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.iceWater)) {\r\n      setDataErr({ iceWater: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.underLayment)) {\r\n      setDataErr({ underLayment: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.dripEdge)) {\r\n      setDataErr({ dripEdge: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.ridgeVent)) {\r\n      setDataErr({ ridgeVent: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.roofVent)) {\r\n      setDataErr({ roofVent: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.plumbingStackMat)) {\r\n      setDataErr({ plumbingStackMat: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.binCost)) {\r\n      setDataErr({ binCost: true });\r\n      isValid = false;\r\n    } else {\r\n      setDataErr(false);\r\n      isValid = true;\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  useEffect(() => {\r\n    Axios.post(\"/api/price/materials\", { email, passToken }).then((res) => {\r\n      setPricesData(res.data.data[0]);\r\n    });\r\n  }, [email, passToken]);\r\n\r\n  useEffect(() => {\r\n    checkForm();\r\n  }, [pricesData]);\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <h6>Materials</h6>\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"groundDropDeliveryCost\"\r\n              label=\"Ground Drop Delivery\"\r\n              error={dataErr.groundDropCost}\r\n              sideLabel=\"$\"\r\n              rightSideLabel=\"Bundle\"\r\n              value={pricesData.groundDropCost}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  groundDropCost: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"roofTopDeliveryCost\"\r\n              label=\"Rooftop Delivery\"\r\n              error={dataErr.roofTopCost}\r\n              sideLabel=\"$\"\r\n              rightSideLabel=\"Bundle\"\r\n              value={pricesData.roofTopCost}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  roofTopCost: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-12\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              step=\"any\"\r\n              id=\"bundlePrice\"\r\n              label=\"Laminated Shingle\"\r\n              error={dataErr.bundle}\r\n              sideLabel=\"$\"\r\n              rightSideLabel=\"Bundles\"\r\n              value={pricesData.bundle}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  bundle: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"starterBundlePrice\"\r\n              label=\"Starter Shingle\"\r\n              error={dataErr.starterBundle}\r\n              sideLabel=\"$\"\r\n              rightSideLabel=\"Bundle\"\r\n              value={pricesData.starterBundle}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  starterBundle: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"cappingBundlePrice\"\r\n              label=\"Hip & Ridge Shingle\"\r\n              sideLabel=\"$\"\r\n              error={dataErr.cappingBundle}\r\n              rightSideLabel=\"Bundle\"\r\n              value={pricesData.cappingBundle}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  cappingBundle: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"iceWater\"\r\n              label=\"Ice & Water Protection\"\r\n              error={dataErr.iceWater}\r\n              sideLabel=\"$\"\r\n              rightSideLabel=\"Roll\"\r\n              value={pricesData.iceWater}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  iceWater: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"underLayment\"\r\n              label=\"Underlayment\"\r\n              error={dataErr.underLayment}\r\n              sideLabel=\"$\"\r\n              rightSideLabel=\"Roll\"\r\n              value={pricesData.underLayment}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  underLayment: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"dripEdge\"\r\n              label=\"Drip Edge\"\r\n              error={dataErr.dripEdge}\r\n              value={pricesData.dripEdge}\r\n              sideLabel=\"$\"\r\n              rightSideLabel=\"Pcs\"\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  dripEdge: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"ridgeVent\"\r\n              label=\"Ridge Vent\"\r\n              error={dataErr.ridgeVent}\r\n              sideLabel=\"$\"\r\n              rightSideLabel=\"Roll\"\r\n              value={pricesData.ridgeVent}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  ridgeVent: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"roofVent\"\r\n              label=\"Roof Vent\"\r\n              error={dataErr.roofVent}\r\n              sideLabel=\"$\"\r\n              rightSideLabel=\"Pcs\"\r\n              value={pricesData.roofVent}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  roofVent: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"plumbingStackMat\"\r\n              label=\"Plumbing Stack Mat\"\r\n              error={dataErr.plumbingStackMat}\r\n              sideLabel=\"$\"\r\n              rightSideLabel=\"Pcs\"\r\n              value={pricesData.plumbingStackMat}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  plumbingStackMat: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"binCost\"\r\n              label=\"Garbage Bin\"\r\n              error={dataErr.binCost}\r\n              sideLabel=\"$\"\r\n              rightSideLabel=\"Bin\"\r\n              value={pricesData.binCost}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  binCost: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-12 mt-3\">\r\n            {err ? (\r\n              <p className=\"text-center text-danger\">Enter at least 1 field</p>\r\n            ) : null}\r\n            {msg.success ? (\r\n              <p className=\"text-center text-success\">Material costs updated</p>\r\n            ) : null}\r\n            {msg.failed ? (\r\n              <p className=\"text-center text-danger\">\r\n                Material costs failed to update\r\n              </p>\r\n            ) : null}\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Complete Materials\"\r\n              className=\"btn w-100\"\r\n              style={btnStyle}\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst CustomInput = (props) => {\r\n  return (\r\n    <div className=\"mt-2\">\r\n      <label\r\n        className=\"p2\"\r\n        style={{\r\n          maxWidth: \"100%\",\r\n          overflow: \"hidden\",\r\n          textOverflow: \"ellipsis\",\r\n          whiteSpace: \"nowrap\",\r\n          marginBottom: \"-2px\",\r\n        }}\r\n      >\r\n        {props.label}\r\n      </label>\r\n      {props.error ? (\r\n        <label\r\n          className=\"p2 float-right\"\r\n          style={{\r\n            maxWidth: \"100%\",\r\n            overflow: \"hidden\",\r\n            textOverflow: \"ellipsis\",\r\n            whiteSpace: \"nowrap\",\r\n            marginBottom: \"-2px\",\r\n            color: \"#e60029\",\r\n          }}\r\n        >\r\n          Invalid\r\n        </label>\r\n      ) : null}\r\n      <div className=\"input-group\">\r\n        {props.sideLabel ? (\r\n          <div className=\"input-group-prepend\">\r\n            <div\r\n              className=\"input-group-text\"\r\n              style={{ backgroundColor: \"#fff\" }}\r\n            >\r\n              {props.sideLabel}\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        <input\r\n          type={props.type}\r\n          className=\"form-control\"\r\n          id={props.id}\r\n          name={props.id}\r\n          step=\".01\"\r\n          placeholder={props.placeholder}\r\n          style={props.sideLabel ? moneyInputStyle : inputStyle}\r\n          value={props.value}\r\n          onChange={props.onChange}\r\n          disabled={props.disabled}\r\n        />\r\n        {props.rightSideLabel ? (\r\n          <div className=\"input-group-prepend\">\r\n            <div\r\n              className=\"input-group-text rounded-right\"\r\n              style={{\r\n                backgroundColor: \"#fff\",\r\n                borderLeft: \"none\",\r\n              }}\r\n            >\r\n              {props.rightSideLabel}\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst btnStyle = {\r\n  outline: \"none\",\r\n  boxShadow: \"none\",\r\n  border: \"none\",\r\n  backgroundColor: \"#e60029\",\r\n  color: \"#fff\",\r\n};\r\n\r\nconst inputStyle = {\r\n  outline: \"none\",\r\n  boxShadow: \"none\",\r\n  border: \"1px solid lightgray\",\r\n};\r\n\r\nconst moneyInputStyle = {\r\n  outline: \"none\",\r\n  boxShadow: \"none\",\r\n  border: \"1px solid lightgray\",\r\n  borderLeft: \"none\",\r\n  paddingLeft: \"0px\",\r\n  marginLeft: \"-11px\",\r\n};\r\n","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\Tools\\CostsTable\\Labour.js",["557"],"import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nexport default function Labour() {\r\n  const [pricesData, setPricesData] = useState([]);\r\n  const [dataErr, setDataErr] = useState([]);\r\n  const [err, setErr] = useState(false);\r\n  const email = localStorage.getItem(\"email\");\r\n  const passToken = localStorage.getItem(\"passToken\");\r\n\r\n  const checkFields = (field) => {\r\n    let isValid = true;\r\n    if (field !== \"\") {\r\n      if (field > 999 || field < 0) {\r\n        isValid = false;\r\n      } else {\r\n        isValid = true;\r\n      }\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (pricesData.length === 0) {\r\n      setErr(true);\r\n      setTimeout(() => {\r\n        setErr(false);\r\n      }, 4000);\r\n    } else {\r\n      if (checkForm()) {\r\n        Axios.post(\"/api/price/labourpriceupdate\", {\r\n          pricesData,\r\n          email,\r\n          passToken,\r\n        })\r\n          .then((res) => {\r\n            console.log(res);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkForm = () => {\r\n    let isValid = true;\r\n\r\n    if (!checkFields(pricesData.bundle)) {\r\n      setDataErr({ bundle: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.starterBundle)) {\r\n      setDataErr({ starterBundle: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.cappingBundle)) {\r\n      setDataErr({ cappingBundle: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.roofTopCost)) {\r\n      setDataErr({ roofTopCost: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.iceWater)) {\r\n      setDataErr({ iceWater: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.underLayment)) {\r\n      setDataErr({ underLayment: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.dripEdge)) {\r\n      setDataErr({ dripEdge: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.ridgeVent)) {\r\n      setDataErr({ ridgeVent: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.roofVent)) {\r\n      setDataErr({ roofVent: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.plumbingStackMat)) {\r\n      setDataErr({ plumbingStackMat: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.binCost)) {\r\n      setDataErr({ binCost: true });\r\n      isValid = false;\r\n    } else {\r\n      setDataErr(false);\r\n      isValid = true;\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  useEffect(() => {\r\n    Axios.post(\"/api/price/labours\", { email, passToken }).then((res) => {\r\n      setPricesData(res.data.data[0]);\r\n    });\r\n  }, [email, passToken]);\r\n\r\n  useEffect(() => {\r\n    checkForm();\r\n  }, [pricesData]);\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <h6>Labour</h6>\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"iceLC\"\r\n              label=\"Ice & Water\"\r\n              error={dataErr.iceWaterLabour}\r\n              sideLabel=\"$\"\r\n              value={pricesData.iceWaterLabour}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  iceWaterLabour: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"dripLC\"\r\n              label=\"Drip Edge\"\r\n              error={dataErr.dripEdgeLabour}\r\n              sideLabel=\"$\"\r\n              value={pricesData.dripEdgeLabour}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  dripEdgeLabour: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"ventLC\"\r\n              label=\"Vents\"\r\n              error={dataErr.ventLabour}\r\n              sideLabel=\"$\"\r\n              value={pricesData.ventLabour}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  ventLabour: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"ridgeVentLC\"\r\n              label=\"Ridge Vent\"\r\n              error={dataErr.ridgeVentLabour}\r\n              sideLabel=\"$\"\r\n              value={pricesData.ridgeVentLabour}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  ridgeVentLabour: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"pStackLC\"\r\n              label=\"Plumbing Stack Mat\"\r\n              error={dataErr.plumbingStackMatLabour}\r\n              sideLabel=\"$\"\r\n              value={pricesData.plumbingStackMatLabour}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  plumbingStackMatLabour: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"underlaymentLC\"\r\n              label=\"Underlayment\"\r\n              error={dataErr.underLaymentLabour}\r\n              sideLabel=\"$\"\r\n              value={pricesData.underLaymentLabour}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  underLaymentLabour: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"chimneyFlashingLC\"\r\n              label=\"Chimney Flashing\"\r\n              error={dataErr.chimneyFlashingLabour}\r\n              sideLabel=\"$\"\r\n              value={pricesData.chimneyFlashingLabour}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  chimneyFlashingLabour: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"wallFlashingLC\"\r\n              label=\"Wall Flashing\"\r\n              error={dataErr.wallFlashingLabour}\r\n              sideLabel=\"$\"\r\n              value={pricesData.wallFlashingLabour}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  wallFlashingLabour: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"satelliteLC\"\r\n              label=\"Satellite\"\r\n              error={dataErr.satelliteLabour}\r\n              sideLabel=\"$\"\r\n              value={pricesData.satelliteLabour}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  satelliteLabour: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-12 mt-3\">\r\n            {err ? (\r\n              <p className=\"text-center text-danger\">Enter at least 1 field</p>\r\n            ) : null}\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Complete Materials\"\r\n              className=\"btn w-100\"\r\n              style={btnStyle}\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst CustomInput = (props) => {\r\n  return (\r\n    <div className=\"mt-2\">\r\n      <label\r\n        className=\"p2\"\r\n        style={{\r\n          maxWidth: \"100%\",\r\n          overflow: \"hidden\",\r\n          textOverflow: \"ellipsis\",\r\n          whiteSpace: \"nowrap\",\r\n          marginBottom: \"-2px\",\r\n        }}\r\n      >\r\n        {props.label}\r\n      </label>\r\n      {props.error ? (\r\n        <label\r\n          className=\"p2 float-right\"\r\n          style={{\r\n            maxWidth: \"100%\",\r\n            overflow: \"hidden\",\r\n            textOverflow: \"ellipsis\",\r\n            whiteSpace: \"nowrap\",\r\n            marginBottom: \"-2px\",\r\n            color: \"#e60029\",\r\n          }}\r\n        >\r\n          Invalid\r\n        </label>\r\n      ) : null}\r\n      <div className=\"input-group\">\r\n        {props.sideLabel ? (\r\n          <div className=\"input-group-prepend\">\r\n            <div\r\n              className=\"input-group-text\"\r\n              style={{ backgroundColor: \"#fff\" }}\r\n            >\r\n              {props.sideLabel}\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        <input\r\n          type={props.type}\r\n          className=\"form-control\"\r\n          id={props.id}\r\n          name={props.id}\r\n          step=\".01\"\r\n          placeholder={props.placeholder}\r\n          style={props.sideLabel ? moneyInputStyle : inputStyle}\r\n          value={props.value}\r\n          onChange={props.onChange}\r\n          disabled={props.disabled}\r\n        />\r\n        {props.rightSideLabel ? (\r\n          <div className=\"input-group-prepend\">\r\n            <div\r\n              className=\"input-group-text rounded-right\"\r\n              style={{\r\n                backgroundColor: \"#fff\",\r\n                borderLeft: \"none\",\r\n              }}\r\n            >\r\n              {props.rightSideLabel}\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst btnStyle = {\r\n  outline: \"none\",\r\n  boxShadow: \"none\",\r\n  border: \"none\",\r\n  backgroundColor: \"#e60029\",\r\n  color: \"#fff\",\r\n};\r\n\r\nconst inputStyle = {\r\n  outline: \"none\",\r\n  boxShadow: \"none\",\r\n  border: \"1px solid lightgray\",\r\n};\r\n\r\nconst moneyInputStyle = {\r\n  outline: \"none\",\r\n  boxShadow: \"none\",\r\n  border: \"1px solid lightgray\",\r\n  borderLeft: \"none\",\r\n  paddingLeft: \"0px\",\r\n  marginLeft: \"-11px\",\r\n};\r\n","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\Tools\\CostsTable\\Profits.js",["558"],"import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nexport default function Profits() {\r\n  const [pricesData, setPricesData] = useState([]);\r\n  const [dataErr, setDataErr] = useState([]);\r\n  const [err, setErr] = useState(false);\r\n  const email = localStorage.getItem(\"email\");\r\n  const passToken = localStorage.getItem(\"passToken\");\r\n  const [msg, setMsg] = useState([]);\r\n\r\n  const checkFields = (field) => {\r\n    let isValid = true;\r\n    if (field !== \"\") {\r\n      if (field > 999 || field < 0) {\r\n        isValid = false;\r\n      } else {\r\n        isValid = true;\r\n      }\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (pricesData.length === 0) {\r\n      setErr(true);\r\n      setTimeout(() => {\r\n        setErr(false);\r\n      }, 4000);\r\n    } else {\r\n      if (checkForm()) {\r\n        Axios.post(\"/api/price/profitspriceupdate\", {\r\n          pricesData,\r\n          email,\r\n          passToken,\r\n        })\r\n          .then((res) => {\r\n            setMsg({ ...msg, success: true });\r\n            setTimeout(() => {\r\n              setMsg({ ...msg, success: false });\r\n            }, 4000);\r\n            console.log(res);\r\n          })\r\n          .catch((error) => {\r\n            setMsg({ ...msg, failed: true });\r\n            setTimeout(() => {\r\n              setMsg({ ...msg, failed: false });\r\n            }, 4000);\r\n            console.log(error);\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkForm = () => {\r\n    let isValid = true;\r\n\r\n    if (!checkFields(pricesData.pitchTwo)) {\r\n      setDataErr({ pitchTwo: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.pitchTwoFive)) {\r\n      setDataErr({ pitchTwoFive: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.pitchThree)) {\r\n      setDataErr({ pitchThree: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.pitchFour)) {\r\n      setDataErr({ pitchFour: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.pitchFive)) {\r\n      setDataErr({ pitchFive: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.pitchSix)) {\r\n      setDataErr({ pitchSix: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.pitchSeven)) {\r\n      setDataErr({ pitchSeven: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.pitchEight)) {\r\n      setDataErr({ pitchEight: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.pitchNine)) {\r\n      setDataErr({ pitchNine: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.pitchTen)) {\r\n      setDataErr({ pitchTen: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.pitchEleven)) {\r\n      setDataErr({ pitchEleven: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.pitchTwelve)) {\r\n      setDataErr({ pitchTwelve: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.pitchThirteen)) {\r\n      setDataErr({ pitchThirteen: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.pitchFourteen)) {\r\n      setDataErr({ pitchFourteen: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.pitchFifteen)) {\r\n      setDataErr({ pitchFifteen: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.pitchSixteen)) {\r\n      setDataErr({ pitchSixteen: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.pitchSeventeen)) {\r\n      setDataErr({ pitchSeventeen: true });\r\n      isValid = false;\r\n    } else if (!checkFields(pricesData.pitchEighteen)) {\r\n      setDataErr({ pitchEighteen: true });\r\n      isValid = false;\r\n    } else {\r\n      setDataErr(false);\r\n      isValid = true;\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  useEffect(() => {\r\n    Axios.post(\"/api/price/profits\", { email, passToken }).then((res) => {\r\n      setPricesData(res.data.data[0]);\r\n    });\r\n  }, [email, passToken]);\r\n\r\n  useEffect(() => {\r\n    checkForm();\r\n  }, [pricesData]);\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-12\">\r\n            <h6>Pitch</h6>\r\n          </div>\r\n          <div className=\"col-4 gb-pr\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"pitchTwo\"\r\n              label={dataErr.pitchTwo ? \"Invalid\" : \"2/12\"}\r\n              // error={dataErr.pitchTwo}\r\n              sideLabel=\"$\"\r\n              placeholder=\"0\"\r\n              value={pricesData.pitchTwo}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  pitchTwo: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-4 gb-pr gb-pl\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"pitchTwoFive\"\r\n              label={dataErr.pitchTwoFive ? \"Invalid\" : \"2.5/12\"}\r\n              //error={dataErr.pitchTwoFive}\r\n              sideLabel=\"$\"\r\n              placeholder=\"0\"\r\n              value={pricesData.pitchTwoFive}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  pitchTwoFive: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-4 gb-pl\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"pitchThree\"\r\n              //label=\"3/12\"\r\n              //error={dataErr.pitchThree}\r\n              label={dataErr.pitchThree ? \"Invalid\" : \"3/12\"}\r\n              sideLabel=\"$\"\r\n              placeholder=\"0\"\r\n              value={pricesData.pitchThree}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  pitchThree: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-4 gb-pr\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"pitchFour\"\r\n              //label=\"4/12\"\r\n              //error={dataErr.pitchFour}\r\n              label={dataErr.pitchFour ? \"Invalid\" : \"3/12\"}\r\n              sideLabel=\"$\"\r\n              placeholder=\"0\"\r\n              value={pricesData.pitchFour}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  pitchFour: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-4 gb-pr gb-pl\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"pitchFive\"\r\n              //label=\"5/12\"\r\n              //error={dataErr.pitchFive}\r\n              label={dataErr.pitchFive ? \"Invalid\" : \"5/12\"}\r\n              sideLabel=\"$\"\r\n              placeholder=\"0\"\r\n              value={pricesData.pitchFive}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  pitchFive: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-4 gb-pl\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"pitchSix\"\r\n              //label=\"6/12\"\r\n              //error={dataErr.pitchSix}\r\n              label={dataErr.pitchSix ? \"Invalid\" : \"6/12\"}\r\n              sideLabel=\"$\"\r\n              placeholder=\"0\"\r\n              value={pricesData.pitchSix}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  pitchSix: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-4 gb-pr\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"pitchSeven\"\r\n              //label=\"7/12\"\r\n              //error={dataErr.pitchSeven}\r\n              label={dataErr.pitchSeven ? \"Invalid\" : \"7/12\"}\r\n              sideLabel=\"$\"\r\n              placeholder=\"0\"\r\n              value={pricesData.pitchSeven}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  pitchSeven: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-4 gb-pl gb-pr\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"pitchEight\"\r\n              //label=\"8/12\"\r\n              //error={dataErr.pitchEight}\r\n              label={dataErr.pitchEight ? \"Invalid\" : \"8/12\"}\r\n              sideLabel=\"$\"\r\n              placeholder=\"0\"\r\n              value={pricesData.pitchEight}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  pitchEight: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-4 gb-pl\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"pitchNine\"\r\n              //label=\"9/12\"\r\n              //error={dataErr.pitchNine}\r\n              label={dataErr.pitchNine ? \"Invalid\" : \"9/12\"}\r\n              sideLabel=\"$\"\r\n              placeholder=\"0\"\r\n              value={pricesData.pitchNine}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  pitchNine: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-4 gb-pr\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"pitchTen\"\r\n              //label=\"10/12\"\r\n              //error={dataErr.pitchTen}\r\n              label={dataErr.pitchTen ? \"Invalid\" : \"10/12\"}\r\n              sideLabel=\"$\"\r\n              placeholder=\"0\"\r\n              value={pricesData.pitchTen}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  pitchTen: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-4 gb-pl gb-pr\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"pitchEleven\"\r\n              //label=\"11/12\"\r\n              //error={dataErr.pitchEleven}\r\n              label={dataErr.pitchEleven ? \"Invalid\" : \"11/12\"}\r\n              sideLabel=\"$\"\r\n              placeholder=\"0\"\r\n              value={pricesData.pitchEleven}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  pitchEleven: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-4 gb-pl\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"pitchTwelve\"\r\n              //label=\"12/12\"\r\n              //error={dataErr.pitchTwelve}\r\n              label={dataErr.pitchTwelve ? \"Invalid\" : \"12/12\"}\r\n              sideLabel=\"$\"\r\n              placeholder=\"0\"\r\n              value={pricesData.pitchTwelve}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  pitchTwelve: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-4 gb-pr\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"pitchThirteen\"\r\n              //label=\"13/12\"\r\n              //error={dataErr.pitchThirteen}\r\n              label={dataErr.pitchThirteen ? \"Invalid\" : \"13/12\"}\r\n              sideLabel=\"$\"\r\n              placeholder=\"0\"\r\n              value={pricesData.pitchThirteen}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  pitchThirteen: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-4 gb-pl gb-pr\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"pitchFourteen\"\r\n              //label=\"14/12\"\r\n              //error={dataErr.pitchFourteen}\r\n              label={dataErr.pitchFourteen ? \"Invalid\" : \"14/12\"}\r\n              sideLabel=\"$\"\r\n              placeholder=\"0\"\r\n              value={pricesData.pitchFourteen}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  pitchFourteen: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-4 gb-pl\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"pitchFifteen\"\r\n              //label=\"15/12\"\r\n              // error={dataErr.pitchFifteen}\r\n              label={dataErr.pitchFifteen ? \"Invalid\" : \"15/12\"}\r\n              sideLabel=\"$\"\r\n              placeholder=\"0\"\r\n              value={pricesData.pitchFifteen}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  pitchFifteen: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-4 gb-pr\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"pitchSixteen\"\r\n              //label=\"16/12\"\r\n              //error={dataErr.pitchSixteen}\r\n              label={dataErr.pitchSixteen ? \"Invalid\" : \"16/12\"}\r\n              sideLabel=\"$\"\r\n              placeholder=\"0\"\r\n              value={pricesData.pitchSixteen}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  pitchSixteen: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-4 gb-pl gb-pr\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"pitchSeventeen\"\r\n              //label=\"17/12\"\r\n              //error={dataErr.pitchSeventeen}\r\n              label={dataErr.pitchSeventeen ? \"Invalid\" : \"17/12\"}\r\n              sideLabel=\"$\"\r\n              placeholder=\"0\"\r\n              value={pricesData.pitchSeventeen}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  pitchSeventeen: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-4 gb-pl\">\r\n            <CustomInput\r\n              type=\"number\"\r\n              id=\"pitchEighteen\"\r\n              //label=\"18/12\"\r\n              //error={dataErr.pitchEighteen}\r\n              label={dataErr.pitchEighteen ? \"Invalid\" : \"18/12\"}\r\n              sideLabel=\"$\"\r\n              placeholder=\"0\"\r\n              value={pricesData.pitchEighteen}\r\n              onChange={(e) =>\r\n                setPricesData({\r\n                  ...pricesData,\r\n                  pitchEighteen: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-12 mt-3\">\r\n            {err ? (\r\n              <p className=\"text-center text-danger\">Enter at least 1 field</p>\r\n            ) : null}\r\n            {msg.success ? (\r\n              <p className=\"text-center text-success\">Profit costs updated</p>\r\n            ) : null}\r\n            {msg.failed ? (\r\n              <p className=\"text-center text-danger\">\r\n                Profit costs failed to update\r\n              </p>\r\n            ) : null}\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Complete Profits\"\r\n              className=\"btn w-100\"\r\n              style={btnStyle}\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst CustomInput = (props) => {\r\n  return (\r\n    <div className=\"mt-2 text-center\">\r\n      <div className=\"input-group\">\r\n        {props.sideLabel ? (\r\n          <div className=\"input-group-prepend\">\r\n            <div\r\n              className=\"input-group-text\"\r\n              style={{ backgroundColor: \"#fff\" }}\r\n            >\r\n              {props.sideLabel}\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        <input\r\n          type={props.type}\r\n          className=\"form-control\"\r\n          id={props.id}\r\n          name={props.id}\r\n          step=\".01\"\r\n          placeholder={props.placeholder}\r\n          style={props.sideLabel ? moneyInputStyle : inputStyle}\r\n          value={props.value}\r\n          onChange={props.onChange}\r\n          disabled={props.disabled}\r\n        />\r\n      </div>\r\n      <label\r\n        className=\"p7\"\r\n        style={{\r\n          maxWidth: \"100%\",\r\n          overflow: \"hidden\",\r\n          textOverflow: \"ellipsis\",\r\n          whiteSpace: \"nowrap\",\r\n          marginBottom: \"-2px\",\r\n        }}\r\n      >\r\n        {props.label}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst btnStyle = {\r\n  outline: \"none\",\r\n  boxShadow: \"none\",\r\n  border: \"none\",\r\n  backgroundColor: \"#e60029\",\r\n  color: \"#fff\",\r\n};\r\n\r\nconst inputStyle = {\r\n  outline: \"none\",\r\n  boxShadow: \"none\",\r\n  border: \"1px solid lightgray\",\r\n};\r\n\r\nconst moneyInputStyle = {\r\n  outline: \"none\",\r\n  boxShadow: \"none\",\r\n  border: \"1px solid lightgray\",\r\n  borderLeft: \"none\",\r\n  paddingLeft: \"0px\",\r\n  marginLeft: \"-11px\",\r\n};\r\n","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\InputTables\\DataTables\\ProjectPrice.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\Documents\\Docs\\Estimates.js",["559"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link, useParams } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n//component\r\nimport CustomCarousel from \"./Components/CustomCarousel\";\r\nimport CustomerCard from \"./Components/CustomerCard\";\r\n//icons\r\nimport * as AiIcon from \"react-icons/ai\";\r\nimport QualityCard from \"./Components/QualityCard\";\r\nimport DescriptionCard from \"./Components/DescriptionCard\";\r\nimport DetailsCard from \"./Components/DetailsCard\";\r\nimport InfoCard from \"./Components/InfoCard\";\r\n\r\nexport default function Estimates() {\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n  const email = localStorage.getItem(\"email\");\r\n  const passToken = localStorage.getItem(\"passToken\");\r\n  const [uploads, setUploads] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(\"authToken\")) {\r\n      history.push(\"/signin\");\r\n    }\r\n    Axios.post(\"/api/album/getalbum\", { id, email, passToken })\r\n      .then((res) => {\r\n        let id = res.data.data[0]._id;\r\n\r\n        Axios.post(\"/api/album/getalbumphotos\", {\r\n          id,\r\n          email,\r\n          passToken,\r\n        })\r\n          .then((res) => {\r\n            setUploads(res.data.data);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [id, email, passToken, history]);\r\n\r\n  //get user input tables\r\n  // get prices\r\n  //\r\n  return (\r\n    <div className=\"Estimates\">\r\n      <div>\r\n        <div className=\"float-left\">\r\n          <div\r\n            onClick={() => history.goBack()}\r\n            style={{ color: \"#3c4b64\", cursor: \"pointer\" }}\r\n          >\r\n            <AiIcon.AiOutlineArrowLeft className=\"h3\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"text-right\">\r\n          <h3>Estimates</h3>\r\n        </div>\r\n      </div>\r\n      <CustomCarousel uploads={uploads} />\r\n      <div style={{ marginTop: \"-15px\" }}>\r\n        <CustomerCard />\r\n      </div>\r\n      <div style={{ marginTop: \"-15px\" }}>\r\n        <QualityCard />\r\n      </div>\r\n      <div style={{ marginTop: \"-15px\" }}>\r\n        <DescriptionCard />\r\n      </div>\r\n      <div style={{ marginTop: \"-15px\" }}>\r\n        <DetailsCard />\r\n      </div>\r\n      <div style={{ marginTop: \"-15px\" }}>\r\n        <InfoCard />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\Documents\\Docs\\Components\\CustomCarousel.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\Documents\\Docs\\Components\\CustomerCard.js",[],"C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\Documents\\Docs\\Components\\QualityCard.js",["560"],"import React, { useState } from \"react\";\r\n//icons\r\nimport * as AiIcon from \"react-icons/ai\";\r\n//css\r\nimport \"../Estimates.css\";\r\n\r\nexport default function QualityCard() {\r\n  const [quality, setQuality] = useState([]);\r\n  return (\r\n    <div className=\"QualityCard\">\r\n      <div className=\"card shadow\" style={{ borderRadius: \"10px\" }}>\r\n        <div className=\"card-body\">\r\n          <h5>Quality</h5>\r\n          <hr />\r\n          <div className=\"row\">\r\n            <div className=\"col-5\">\r\n              <p className=\"p5\">\r\n                <span style={{ marginRight: \"10px\" }}>Good</span>{\" \"}\r\n                <AiIcon.AiFillStar color=\"red\" />\r\n              </p>\r\n            </div>\r\n            <div className=\"col-7 text-right\">\r\n              <p className=\"p5\">\r\n                <span>$12,22.82</span>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  style={{ marginLeft: \"5px\" }}\r\n                  className=\"quality_checkbox\"\r\n                  name=\"good_check\"\r\n                  id=\"good_check\"\r\n                  checked={quality.good}\r\n                  onChange={(e) => {\r\n                    setQuality({\r\n                      ...quality,\r\n                      good: e.target.checked,\r\n                      better: false,\r\n                      best: false,\r\n                    });\r\n                  }}\r\n                />\r\n              </p>\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className=\"p5\">\r\n                <span style={{ marginRight: \"5px\" }}>Better</span>{\" \"}\r\n                <AiIcon.AiFillStar color=\"red\" />{\" \"}\r\n                <AiIcon.AiFillStar color=\"red\" />\r\n              </p>\r\n            </div>\r\n            <div className=\"col-7 text-right\">\r\n              <p className=\"p5\">\r\n                <span>$12,22.82</span>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  style={{ marginLeft: \"5px\" }}\r\n                  className=\"quality_checkbox\"\r\n                  name=\"better_check\"\r\n                  id=\"better_check\"\r\n                  checked={quality.better}\r\n                  onChange={(e) => {\r\n                    setQuality({\r\n                      ...quality,\r\n                      good: false,\r\n                      better: e.target.checked,\r\n                      best: false,\r\n                    });\r\n                  }}\r\n                />\r\n              </p>\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <p className=\"p5\">\r\n                <span style={{ marginRight: \"15px\" }}>Best</span>{\" \"}\r\n                <AiIcon.AiFillStar color=\"red\" />{\" \"}\r\n                <AiIcon.AiFillStar color=\"red\" />{\" \"}\r\n                <AiIcon.AiFillStar color=\"red\" />\r\n              </p>\r\n            </div>\r\n            <div className=\"col-7 text-right\">\r\n              <p className=\"p5\">\r\n                <span>$12,22.82</span>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  style={{ marginLeft: \"5px\" }}\r\n                  className=\"quality_checkbox\"\r\n                  name=\"best_check\"\r\n                  id=\"best_check\"\r\n                  checked={quality.best}\r\n                  onChange={(e) => {\r\n                    setQuality({\r\n                      ...quality,\r\n                      good: false,\r\n                      better: false,\r\n                      best: e.target.checked,\r\n                    });\r\n                  }}\r\n                />\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst textStyle = {\r\n  textOverflow: \"ellipsis\",\r\n  overFlow: \"hidden\",\r\n  maxWidth: \"100px\",\r\n  whiteSpace: \"nowrap\",\r\n};\r\n","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\Documents\\Docs\\Components\\DescriptionCard.js",["561","562","563","564"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n\r\nimport * as BsIcon from \"react-icons/bs\";\r\n\r\nexport default function DescriptionCard() {\r\n  return (\r\n    <div>\r\n      <div className=\"card shadow\" style={{ borderRadius: \"10px\" }}>\r\n        <div className=\"card-body\">\r\n          <h5>Description</h5>\r\n          <hr />\r\n          {data.data.map((item, index) => {\r\n            return (\r\n              <div style={{ marginBottom: \"-5px\" }} key={index}>\r\n                <div className=\"float-left\">\r\n                  <span className=\"p6\">\r\n                    <BsIcon.BsDot size={20} />\r\n                    {item.title}:\r\n                  </span>\r\n                </div>\r\n                <div className=\"text-right\">\r\n                  <p className=\"p7\">{item.subtitle}</p>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst data = {\r\n  data: [\r\n    { title: \"Removal & Disposal\", subtitle: \"One layer of shingles\" },\r\n    { title: \"Garbage Bin Location\", subtitle: \"Driveway\" },\r\n    { title: \"Roof Deck Repair\", subtitle: \"1/2'' Plywood $3.00 / sq. ft.\" },\r\n    { title: \"Chimney/Wall re-flashing\", subtitle: \"$25.00 / lin. ft.\" },\r\n    { title: \"Clean Up\", subtitle: \"Complete job site clean up\" },\r\n    { title: \"Inspection\", subtitle: \"On site Inspection by manager\" },\r\n  ],\r\n};\r\n","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\Documents\\Docs\\Components\\DetailsCard.js",["565","566","567","568"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n\r\nimport * as BsIcon from \"react-icons/bs\";\r\n\r\nexport default function DescriptionCard() {\r\n  return (\r\n    <div>\r\n      <div className=\"card shadow\" style={{ borderRadius: \"10px\" }}>\r\n        <div className=\"card-body\">\r\n          <h5>Details</h5>\r\n          <hr />\r\n          {data.data.map((item, index) => {\r\n            return (\r\n              <div style={{ marginBottom: \"-5px\" }} key={index}>\r\n                <div className=\"float-left\">\r\n                  <span className=\"p6\">\r\n                    <BsIcon.BsDot size={20} />\r\n                    {item.title}:\r\n                  </span>\r\n                </div>\r\n                <div className=\"text-right\">\r\n                  <p className=\"p7\">{item.subtitle}</p>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst data = {\r\n  data: [\r\n    { title: \"Shingle\", subtitle: \"GAF\" },\r\n    { title: \"Starter Shingle\", subtitle: \"asdf\" },\r\n    { title: \"Hip & Ridge Shingle\", subtitle: \"asdf\" },\r\n    { title: \"Color\", subtitle: \"asdf\" },\r\n    { title: \"Underlayment\", subtitle: \"asdf\" },\r\n    { title: \"Ice & Water Protection\", subtitle: \"asdf\" },\r\n    { title: \"Venting\", subtitle: \"asdf\" },\r\n    { title: \"Plumbing Stack\", subtitle: \"asdf\" },\r\n    { title: \"Chimney\", subtitle: \"asdf\" },\r\n    { title: \"Wall Flashing\", subtitle: \"asdf\" },\r\n    { title: \"Satellite Dish\", subtitle: \"asdf\" },\r\n    { title: \"Workmanship Warranty\", subtitle: \"asdf\" },\r\n    { title: \"Shingle Warranty\", subtitle: \"asdf\" },\r\n  ],\r\n};\r\n","C:\\Users\\techd\\Documents\\ROOFBUNDLE\\MAIN\\Client\\src\\views\\customer\\Documents\\Docs\\Components\\InfoCard.js",[],{"ruleId":"569","replacedBy":"570"},{"ruleId":"571","replacedBy":"572"},{"ruleId":"569","replacedBy":"573"},{"ruleId":"571","replacedBy":"574"},{"ruleId":"575","severity":1,"message":"576","line":14,"column":6,"nodeType":"577","endLine":14,"endColumn":8,"suggestions":"578"},{"ruleId":"579","severity":1,"message":"580","line":25,"column":10,"nodeType":"581","messageId":"582","endLine":25,"endColumn":17},{"ruleId":"579","severity":1,"message":"583","line":25,"column":19,"nodeType":"581","messageId":"582","endLine":25,"endColumn":29},{"ruleId":"575","severity":1,"message":"584","line":52,"column":6,"nodeType":"577","endLine":52,"endColumn":8,"suggestions":"585"},{"ruleId":"569","replacedBy":"586"},{"ruleId":"571","replacedBy":"587"},{"ruleId":"569","replacedBy":"588"},{"ruleId":"571","replacedBy":"589"},{"ruleId":"569","replacedBy":"590"},{"ruleId":"571","replacedBy":"591"},{"ruleId":"569","replacedBy":"592"},{"ruleId":"571","replacedBy":"593"},{"ruleId":"579","severity":1,"message":"594","line":2,"column":17,"nodeType":"581","messageId":"582","endLine":2,"endColumn":28},{"ruleId":"579","severity":1,"message":"595","line":2,"column":41,"nodeType":"581","messageId":"582","endLine":2,"endColumn":44},{"ruleId":"579","severity":1,"message":"596","line":1,"column":17,"nodeType":"581","messageId":"582","endLine":1,"endColumn":26},{"ruleId":"579","severity":1,"message":"597","line":2,"column":10,"nodeType":"581","messageId":"582","endLine":2,"endColumn":15},{"ruleId":"579","severity":1,"message":"594","line":2,"column":17,"nodeType":"581","messageId":"582","endLine":2,"endColumn":28},{"ruleId":"579","severity":1,"message":"598","line":2,"column":30,"nodeType":"581","messageId":"582","endLine":2,"endColumn":39},{"ruleId":"579","severity":1,"message":"595","line":2,"column":41,"nodeType":"581","messageId":"582","endLine":2,"endColumn":44},{"ruleId":"579","severity":1,"message":"598","line":3,"column":17,"nodeType":"581","messageId":"582","endLine":3,"endColumn":26},{"ruleId":"575","severity":1,"message":"599","line":94,"column":6,"nodeType":"577","endLine":94,"endColumn":24,"suggestions":"600"},{"ruleId":"569","replacedBy":"601"},{"ruleId":"571","replacedBy":"602"},{"ruleId":"569","replacedBy":"603"},{"ruleId":"571","replacedBy":"604"},{"ruleId":"605","severity":1,"message":"606","line":198,"column":31,"nodeType":"607","messageId":"608","endLine":198,"endColumn":33},{"ruleId":"605","severity":1,"message":"609","line":232,"column":31,"nodeType":"607","messageId":"610","endLine":232,"endColumn":33},{"ruleId":"605","severity":1,"message":"606","line":256,"column":31,"nodeType":"607","messageId":"608","endLine":256,"endColumn":33},{"ruleId":"569","replacedBy":"611"},{"ruleId":"571","replacedBy":"612"},{"ruleId":"579","severity":1,"message":"613","line":55,"column":9,"nodeType":"581","messageId":"582","endLine":55,"endColumn":29},{"ruleId":"605","severity":1,"message":"614","line":100,"column":15,"nodeType":"615","messageId":"608","endLine":100,"endColumn":24},{"ruleId":"605","severity":1,"message":"614","line":111,"column":15,"nodeType":"615","messageId":"608","endLine":111,"endColumn":24},{"ruleId":"605","severity":1,"message":"606","line":120,"column":31,"nodeType":"607","messageId":"608","endLine":120,"endColumn":33},{"ruleId":"616","severity":1,"message":"617","line":44,"column":38,"nodeType":"618","messageId":"619","endLine":44,"endColumn":40},{"ruleId":"616","severity":1,"message":"617","line":55,"column":38,"nodeType":"618","messageId":"619","endLine":55,"endColumn":40},{"ruleId":"579","severity":1,"message":"620","line":63,"column":12,"nodeType":"581","messageId":"582","endLine":63,"endColumn":23},{"ruleId":"616","severity":1,"message":"617","line":264,"column":21,"nodeType":"618","messageId":"619","endLine":264,"endColumn":23},{"ruleId":"616","severity":1,"message":"617","line":22,"column":15,"nodeType":"618","messageId":"619","endLine":22,"endColumn":17},{"ruleId":"579","severity":1,"message":"621","line":116,"column":9,"nodeType":"581","messageId":"582","endLine":116,"endColumn":19},{"ruleId":"575","severity":1,"message":"622","line":201,"column":6,"nodeType":"577","endLine":201,"endColumn":24,"suggestions":"623"},{"ruleId":"575","severity":1,"message":"624","line":207,"column":6,"nodeType":"577","endLine":207,"endColumn":27,"suggestions":"625"},{"ruleId":"575","severity":1,"message":"622","line":213,"column":6,"nodeType":"577","endLine":213,"endColumn":24,"suggestions":"626"},{"ruleId":"575","severity":1,"message":"622","line":219,"column":6,"nodeType":"577","endLine":219,"endColumn":27,"suggestions":"627"},{"ruleId":"605","severity":1,"message":"606","line":730,"column":38,"nodeType":"607","messageId":"608","endLine":730,"endColumn":40},{"ruleId":"579","severity":1,"message":"628","line":5,"column":13,"nodeType":"581","messageId":"582","endLine":5,"endColumn":19},{"ruleId":"579","severity":1,"message":"629","line":14,"column":8,"nodeType":"581","messageId":"582","endLine":14,"endColumn":12},{"ruleId":"575","severity":1,"message":"630","line":37,"column":6,"nodeType":"577","endLine":37,"endColumn":37,"suggestions":"631"},{"ruleId":"579","severity":1,"message":"632","line":195,"column":7,"nodeType":"581","messageId":"582","endLine":195,"endColumn":16},{"ruleId":"575","severity":1,"message":"633","line":110,"column":6,"nodeType":"577","endLine":110,"endColumn":18,"suggestions":"634"},{"ruleId":"575","severity":1,"message":"633","line":98,"column":6,"nodeType":"577","endLine":98,"endColumn":18,"suggestions":"635"},{"ruleId":"575","severity":1,"message":"633","line":128,"column":6,"nodeType":"577","endLine":128,"endColumn":18,"suggestions":"636"},{"ruleId":"579","severity":1,"message":"637","line":2,"column":22,"nodeType":"581","messageId":"582","endLine":2,"endColumn":26},{"ruleId":"579","severity":1,"message":"638","line":107,"column":7,"nodeType":"581","messageId":"582","endLine":107,"endColumn":16},{"ruleId":"579","severity":1,"message":"639","line":1,"column":17,"nodeType":"581","messageId":"582","endLine":1,"endColumn":25},{"ruleId":"579","severity":1,"message":"596","line":1,"column":27,"nodeType":"581","messageId":"582","endLine":1,"endColumn":36},{"ruleId":"579","severity":1,"message":"640","line":2,"column":10,"nodeType":"581","messageId":"582","endLine":2,"endColumn":19},{"ruleId":"579","severity":1,"message":"641","line":3,"column":8,"nodeType":"581","messageId":"582","endLine":3,"endColumn":13},{"ruleId":"579","severity":1,"message":"639","line":1,"column":17,"nodeType":"581","messageId":"582","endLine":1,"endColumn":25},{"ruleId":"579","severity":1,"message":"596","line":1,"column":27,"nodeType":"581","messageId":"582","endLine":1,"endColumn":36},{"ruleId":"579","severity":1,"message":"640","line":2,"column":10,"nodeType":"581","messageId":"582","endLine":2,"endColumn":19},{"ruleId":"579","severity":1,"message":"641","line":3,"column":8,"nodeType":"581","messageId":"582","endLine":3,"endColumn":13},"no-native-reassign",["642"],"no-negated-in-lhs",["643"],["642"],["643"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["644"],"no-unused-vars","'weather' is assigned a value but never used.","Identifier","unusedVar","'setWeather' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchLocation'. Either include it or remove the dependency array.",["645"],["642"],["643"],["642"],["643"],["642"],["643"],["642"],["643"],"'CCardHeader' is defined but never used.","'Cul' is defined but never used.","'useEffect' is defined but never used.","'CCard' is defined but never used.","'CCardBody' is defined but never used.","React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array. You can also do a functional update 'setForm(f => ...)' if you only need 'form' in the 'setForm' call.",["646"],["642"],["643"],["642"],["643"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["642"],["643"],"'getBasicInstallValue' is assigned a value but never used.","Array.prototype.map() expects a return value from function.","FunctionExpression","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'handleEnter' is defined but never used.","'uslessFunc' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'ftFormFields'. Either include it or remove the dependency array.",["647"],"React Hook useEffect has a missing dependency: 'incFormFields'. Either include it or remove the dependency array.",["648"],["649"],["650"],"'FiIcon' is defined but never used.","'img6' is defined but never used.","React Hook useEffect has a missing dependency: 'errs'. Either include it or remove the dependency array. You can also do a functional update 'setErrs(e => ...)' if you only need 'errs' in the 'setErrs' call.",["651"],"'fileNames' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'checkForm'. Either include it or remove the dependency array.",["652"],["653"],["654"],"'Link' is defined but never used.","'textStyle' is assigned a value but never used.","'useState' is defined but never used.","'useParams' is defined but never used.","'Axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"655","fix":"656"},{"desc":"657","fix":"658"},{"desc":"659","fix":"660"},{"desc":"661","fix":"662"},{"desc":"663","fix":"664"},{"desc":"665","fix":"666"},{"desc":"667","fix":"668"},{"desc":"669","fix":"670"},{"desc":"671","fix":"672"},{"desc":"671","fix":"673"},{"desc":"671","fix":"674"},"Update the dependencies array to be: [history]",{"range":"675","text":"676"},"Update the dependencies array to be: [fetchLocation]",{"range":"677","text":"678"},"Update the dependencies array to be: [items, eaveItems, form]",{"range":"679","text":"680"},"Update the dependencies array to be: [form.adjOneStory, ftFormFields]",{"range":"681","text":"682"},"Update the dependencies array to be: [form.adjOneStoryInc, incFormFields]",{"range":"683","text":"684"},"Update the dependencies array to be: [form.adjTwoStory, ftFormFields]",{"range":"685","text":"686"},"Update the dependencies array to be: [form.adjTwoStoryInc, ftFormFields]",{"range":"687","text":"688"},"Update the dependencies array to be: [id, email, passToken, history, errs]",{"range":"689","text":"690"},"Update the dependencies array to be: [checkForm, pricesData]",{"range":"691","text":"692"},{"range":"693","text":"692"},{"range":"694","text":"692"},[371,373],"[history]",[1208,1210],"[fetchLocation]",[2762,2780],"[items, eaveItems, form]",[5786,5804],"[form.adjOneStory, ftFormFields]",[5970,5991],"[form.adjOneStoryInc, incFormFields]",[6147,6165],"[form.adjTwoStory, ftFormFields]",[6330,6351],"[form.adjTwoStoryInc, ftFormFields]",[1323,1354],"[id, email, passToken, history, errs]",[3294,3306],"[checkForm, pricesData]",[2820,2832],[4029,4041]]